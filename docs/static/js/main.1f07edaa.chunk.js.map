{"version":3,"sources":["shared/enums/routes.enum.ts","shared/enums/listTypeEnum.ts","shared/state/state.ts","modules/notfound/pages/notfoundPage.tsx","database/index.ts","shared/state/actions.ts","shared/state/context.ts","shared/helpers/consoleHelper.ts","shared/state/reducer.ts","modules/lists/components/tickListOverview.tsx","modules/lists/components/editTickListTags.tsx","modules/lists/components/editTickListDialog.tsx","modules/lists/pages/overview.tsx","modules/lists/components/copyInstructions.tsx","shared/components/atoms/sortListButton.tsx","modules/lists/components/seciesNameFormatted.tsx","modules/lists/components/sortableTickList.tsx","modules/lists/components/tickListTabs.tsx","shared/components/organisms/deleteConfirmationDialog.tsx","modules/lists/components/tickListActionMenu.tsx","modules/lists/components/tickListName.tsx","modules/lists/components/toggleUniqueButton.tsx","shared/components/organisms/genericDialog.tsx","modules/lists/components/wantedRating.tsx","modules/lists/components/editTick.tsx","modules/lists/components/compareGrid.tsx","modules/lists/components/compareTickLists.tsx","modules/lists/components/ratingIndicator.tsx","modules/lists/components/wantedSpecies.tsx","modules/lists/components/tickListTabPanel.tsx","serviceWorkerRegistration.ts","serviceWorkerWrapper.tsx","shared/components/organisms/initDatabase.tsx","shared/components/styles/theme.tsx","shared/components/organisms/hideOnScroll.tsx","assets/images/xa-logo.png","shared/components/atoms/logoImage.tsx","shared/components/organisms/tickListHeader.tsx","shared/components/organisms/listDrawer.tsx","shared/components/atoms/scrollToTop.tsx","shared/templates/listTemplate.tsx","modules/lists/components/tagListOverview.tsx","modules/lists/components/tagListWanted.tsx","modules/lists/components/tagsActionMenu.tsx","modules/lists/components/tagActiveView.tsx","modules/lists/components/tagColorPicker.tsx","modules/lists/components/tagCreateForm.tsx","modules/lists/components/tagEdit.tsx","shared/routes/pageRoutes.tsx","modules/lists/pages/listFavourites.tsx","modules/lists/pages/importList.tsx","modules/lists/pages/viewTickList.tsx","modules/lists/pages/tagsPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RoutesEnum","RouteTypeEnum","ListTypeEnum","Status","SortTickListEnum","PageNotfound","useLocation","pathname","Box","sx","justifyContent","alignItems","display","flexDirection","height","db","taxon","tickList","wantedTickList","tags","tagLists","version","stores","Dexie","ActionType","initialGameState","players","gameName","listViewType","listDrawerVisible","sortListAsc","sortListBy","Date","expandedTickListType","Lokal","activeTagId","focusQuantity","focusSpeciesName","winner","gameStatus","NotStarted","GameContext","React","createContext","state","dispatch","ConsoleHelper","gameReducer","action","log","type","ToggleListView","ToggleListDrawer","SortTickList","payload","sortBy","ExpandedTickListType","SetActiveTag","FocusQuantity","FocusSpeciesName","AddPlayer","ResetGame","map","player","status","value","message","warn","error","table","tabularData","properties","setActiveTagId","toogleListDrawer","TickListOverview","props","callback","persistChanges","excludeTickListId","useContext","useState","expanded","setExpanded","activeListType","setActiveListType","handleChange","listType","event","isExpanded","allLists","useLiveQuery","toArray","listTypes","Object","values","setListName","Landskap","Kommun","Custom","tickLists","setTickLists","useEffect","undefined","filter","x","id","minWidth","fontWeight","m","color","length","Paper","Typography","variant","py","px","InfoOutlined","fontSize","mr","currentTickList","item","Accordion","onChange","AccordionSummary","expandIcon","ExpandMore","component","ml","AccordionDetails","p","Divider","List","disablePadding","sort","a","b","listName","index","ListItem","secondaryAction","borderRadius","backgroundColor","tickCount","onClick","Link","to","divider","dense","ListItemIcon","ListAlt","ListItemText","primary","year","favourite","Star","mt","verticalAlign","defaultProps","EditTickListTags","tickListId","setTags","currentTagLists","where","equals","allTags","mapptedTags","hasCurrentList","tag","tagId","toggleTag","console","and","delete","add","Chip","label","name","mb","onDelete","EditTickListDialog","onClose","open","other","setListType","dialogId","now","toString","Math","random","substring","Dialog","onBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","TextField","fullWidth","size","target","FormControl","my","InputLabel","Select","labelId","MenuItem","DialogActions","Button","autoFocus","update","then","toast","success","ticks","created","updated","ListOverviewPage","openAddDialog","setOpenAddDialog","width","ListImport","startIcon","PostAdd","AddCircle","CopyInstructions","panel","paddingLeft","href","ContentCopy","FavoriteOutlined","SortListButton","sortKey","setSort","isActive","ArrowUpward","pl","ArrowDownward","sortAscending","SpeciesNameFormatted","rank","className","SortableTickList","taxaList","mx","bgcolor","right","pr","position","borderBottom","fontFamily","flexShrink","textAlign","top","transform","lineHeight","letterSpacing","borderBottomWidth","SpeciesName","date","taxonId","flexWrap","style","WindowOutlined","opacity","TickListTabs","tabItems","activeTab","setActiveTab","Tabs","newValue","minHeight","Tab","DeleteConfirmationDialog","title","modaltext","maxWidth","TickListActionMenu","history","useHistory","anchorEl","setAnchorEl","Boolean","handleClose","deleteId","setDeleteId","handleCloseDialog","push","ListOverview","setTickListId","formatDate","inputDate","toISOString","toLocaleTimeString","padding","borderColor","currentTarget","Menu","MenuListProps","Edit","modify","StarBorder","apUrl","window","ExitToApp","csvString","e","join","createCSV","Download","Delete","pt","TickListName","pb","gutterBottom","Grow","in","ToggleUniqueButton","isUnique","setIsUnique","ToggleButtonGroup","exclusive","showUnique","ToggleButton","FormatListBulleted","CallSplit","GenericDialog","openDialog","dialogTitle","dialogContent","abortLabel","saveLabel","setOpen","componentId","IconButton","theme","palette","grey","dividers","disableElevation","WantedRating","rating","setValue","setTickExists","wantedTickListTicks","setWantedTickListTicks","tickExistsCheck","some","Rating","ratingValue","newTickWithRating","objIndex","findIndex","obj","put","updateRating","EditTick","selectedTaxonId","setSelectedTaxonId","showEditTickDialog","setShowEditTickDialog","selectedTaxaList","closeDialog","CompareGrid","tickListsToCompare","setTaxonId","handeCloseTickEdit","useCallback","compareTickLists","setCompareTickLists","setShowUnique","listMap","count","allTaxa","tempCompareTickLists","forEach","hasTickArray","list","includes","hasTick","toggleUnique","showEditDailog","overflow","borderCollapse","borderSpacing","borderTopWidth","borderTopStyle","borderTopColor","borderRight","border","parentIndex","listId","CheckBox","CheckBoxOutlineBlank","CompareTickLists","activeComparison","setActiveComparison","selectedTickLists","setSelectedTickLists","onListSelected","compareList","prevArray","handleDelete","Stack","spacing","deleteIcon","Done","TransitionGroup","Collapse","CompareArrows","RatingIndicator","WantedSpeciesList","wantedSpeciesList","expectedSpecies","setExpectedSpecies","expextedTickList","expectedTaxons","exists","newRatedTaxon","nonRatingIndex","square","elevation","ListItemButton","AddCircleOutline","TickListTabPanel","children","role","hidden","isLocalhost","location","hostname","match","register","config","navigator","URL","process","origin","addEventListener","swUrl","fetch","headers","response","contentType","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","onOffline","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ServiceWorkerWrapper","showReload","setShowReload","appOffline","setAppOffline","waitingWorker","setWaitingWorker","onSWUpdate","waiting","postMessage","form","document","createElement","method","body","appendChild","submit","InitDatabase","taxonCount","bulkPut","lastKey","createTheme","main","secondary","background","default","components","MuiCssBaseline","styleOverrides","whiteSpace","scrollbarColor","HideOnScroll","trigger","useScrollTrigger","Slide","appear","direction","LogoImage","src","Logo","alt","maxHeight","TickListHeader","AppBar","borderBottomStyle","borderBottomColor","Toolbar","flexGrow","textDecoration","Default","Badge","badgeContent","Apps","ListFavourites","Tags","Bookmarks","ListDrawer","fetchData","transaction","dbResult","toggleDrawer","Drawer","anchor","subheader","ListSubheader","ExpandLess","timeout","unmountOnExit","ScrollToTop","disableHysteresis","threshold","Zoom","ownerDocument","querySelector","scrollIntoView","behavior","block","bottom","Fab","ListTemplate","Component","route","ThemeProvider","CssBaseline","Container","TagListOverview","lists","TagListWanted","listForRender","setListForRender","all","Promise","listCollection","bands","genresPromises","band","anyOf","albumsPromises","genresAndAlbums","result","i","wanted","wantedLists","tempResult","ratedTaxa","z","taxa","TagsActionMenu","deleteCount","TagActiveView","handleTabChange","activeTag","setActiveTag","findTag","MuiColors","TagColorPicker","activeColor","setActiveColor","gridTemplateColumns","gridTemplateRows","gridGap","newColor","CheckOutlined","TagCreateForm","currentTag","setCurrentTag","changeTagColor","prev","Grid","container","xs","TagEdit","showAddTagForm","setShowAddTagForm","toggleAddTagForm","newActiveTagId","routes","exact","path","template","favouriteTickLists","setFavouriteTickLists","alpha","light","listData","setListData","parseListData","json","JSON","parse","prototype","hasOwnProperty","call","areaName","speciesList","imported","DownloadingOutlined","multiline","placeholder","InputLabelProps","shrink","rows","disabled","endIcon","CloudUpload","ListDetail","useParams","sortByDate","setTaxaList","wantedTaxaList","setWantedTaxaList","setTickList","displayTaxaList","setDisplayTaxaList","tickListTableData","isCountable","wantedTicks","existingTaxa","mappedTaxaList","findTaxa","find","sortOrder","PageRoutes","routeItem","render","App","useReducer","Provider","basename","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f07edaa.chunk.js","sourcesContent":["export enum RoutesEnum {\r\n  Default = '/',\r\n  Document = '/document',\r\n  Start = '/start',\r\n  News = '/nyheter',\r\n  ListOverview = '/list/overview',\r\n  ListImport = '/list/import',\r\n  ListDetail = '/list/:id',\r\n  ListFavourites = '/list/favourites',\r\n  Tags = '/tags',\r\n  CreateTag = '/tags/create',\r\n}\r\n\r\nexport enum RouteTypeEnum {\r\n  private = 'private',\r\n  public = 'public',\r\n  session = 'session',\r\n}\r\n\r\nexport const isPrivate = (routeType: RouteTypeEnum) => routeType === RouteTypeEnum.private;\r\nexport const isSession = (routeType: RouteTypeEnum) => routeType === RouteTypeEnum.session;\r\nexport const isPublic = (routeType: RouteTypeEnum) => routeType === RouteTypeEnum.public;\r\n","export enum ListTypeEnum {\r\n  Kommun = 'Kommun',\r\n  Landskap = 'Provins',\r\n  Lokal = 'Lokal',\r\n  Custom = 'Egen',\r\n}\r\n","import { ListTypeEnum } from 'src/shared/enums/listTypeEnum';\r\n\r\nexport interface GameState {\r\n  players: Player[];\r\n  gameName: string;\r\n  listViewType: boolean;\r\n  listDrawerVisible: boolean;\r\n  sortListAsc: boolean;\r\n  sortListBy: SortTickListEnum;\r\n  expandedTickListType: ListTypeEnum;\r\n  activeTagId: number | null;\r\n  focusQuantity: boolean;\r\n  focusSpeciesName: boolean;\r\n  winner: Player | null;\r\n  gameStatus: Status;\r\n}\r\n\r\nexport enum Status {\r\n  NotStarted = 'Not Started',\r\n  InProgress = 'In Progress',\r\n  Finished = 'Finished',\r\n}\r\n\r\nexport enum SortTickListEnum {\r\n  SpeciesName = 'speciesname',\r\n  Date = 'date',\r\n}\r\n\r\nexport interface Player {\r\n  name: string;\r\n  id: number;\r\n  status: Status;\r\n  value?: number;\r\n}\r\n\r\nexport const initialGameState: GameState = {\r\n  players: [],\r\n  gameName: 'Game1',\r\n  listViewType: true,\r\n  listDrawerVisible: false,\r\n  sortListAsc: true,\r\n  sortListBy: SortTickListEnum.Date,\r\n  expandedTickListType: ListTypeEnum.Lokal,\r\n  activeTagId: null,\r\n  focusQuantity: true,\r\n  focusSpeciesName: false,\r\n  winner: null,\r\n  gameStatus: Status.NotStarted,\r\n};\r\n","import { useLocation } from 'react-router-dom';\r\nimport AutoAwesomeIcon from '@mui/icons-material/AutoAwesome';\r\nimport { Box, Typography } from '@mui/material';\r\n\r\nexport const PageNotfound = () => {\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <Box sx={{ justifyContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n      {/* \r\n      <Typography variant='h4' align='center'>\r\n        Sidan saknas\r\n      </Typography>\r\n      <Typography variant='h6' align='center' gutterBottom>\r\n        <em>{pathname}</em> hittades inte\r\n      </Typography>\r\n      <Typography align='center' sx={{ color: 'text.secondary' }}>\r\n        <AutoAwesomeIcon sx={{ fontSize: '8rem' }} />\r\n      </Typography>\r\n      */}\r\n    </Box>\r\n  );\r\n};\r\n","import Dexie, { Table } from 'dexie';\r\nimport { Taxon } from 'src/database/models/taxon';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { Tag } from 'src/database/models/tag';\r\nimport { TagList } from 'src/database/models/tagList';\r\nimport { WantedTickList } from 'src/database/models/wantedTickList';\r\n\r\nclass AppDB extends Dexie {\r\n  taxon!: Table<Taxon>;\r\n\r\n  tickList!: Table<TickList>;\r\n\r\n  wantedTickList!: Table<WantedTickList>;\r\n\r\n  tags!: Table<Tag>;\r\n\r\n  tagLists!: Table<TagList>;\r\n\r\n  constructor() {\r\n    super('appDB');\r\n    this.version(3).stores({\r\n      taxon: `++id, taxonId, includedByTaxonId, name, scientificName, rubin, sortOrder, isCountable, rank`,\r\n      tickList: `++id, listName, listType, ticks, tickCount, year, updated, created, imported, favourite, apUrl`,\r\n      wantedTickList: `++id, &tickListId, wantedTicks`,\r\n      tags: '++id, name, color',\r\n      tagLists: '++id, tagId, tickListId',\r\n    });\r\n  }\r\n}\r\n\r\nexport const db = new AppDB();\r\n","import { ListTypeEnum } from '../enums/listTypeEnum';\r\nimport { Player, SortTickListEnum } from './state';\r\n\r\nexport enum ActionType {\r\n  ToggleListView,\r\n  ToggleListDrawer,\r\n  SortTickList,\r\n  ExpandedTickListType,\r\n  FocusQuantity,\r\n  FocusSpeciesName,\r\n  SetActiveTag,\r\n  AddPlayer,\r\n  SetPlayerValue,\r\n  ResetGame,\r\n}\r\n\r\nexport interface ToggleListView {\r\n  type: ActionType.ToggleListView;\r\n}\r\n\r\nexport interface ToggleListDrawer {\r\n  type: ActionType.ToggleListDrawer;\r\n}\r\n\r\nexport interface SortTickList {\r\n  type: ActionType.SortTickList;\r\n  payload: { sortBy: SortTickListEnum };\r\n}\r\n\r\nexport interface ExpandedTickListType {\r\n  type: ActionType.ExpandedTickListType;\r\n  payload: { expandedTickListType: ListTypeEnum };\r\n}\r\n\r\nexport interface SetActiveTag {\r\n  type: ActionType.SetActiveTag;\r\n  payload: { activeTagId: number | null };\r\n}\r\n\r\nexport interface FocusQuantity {\r\n  type: ActionType.FocusQuantity;\r\n}\r\n\r\nexport interface FocusSpeciesName {\r\n  type: ActionType.FocusSpeciesName;\r\n}\r\n\r\nexport interface AddPlayer {\r\n  type: ActionType.AddPlayer;\r\n  payload: Player;\r\n}\r\n\r\nexport interface SetPlayerValue {\r\n  type: ActionType.SetPlayerValue;\r\n  payload: { id: number; value: number };\r\n}\r\n\r\nexport interface ResetGame {\r\n  type: ActionType.ResetGame;\r\n}\r\n\r\nexport type GameActions =\r\n  | ToggleListView\r\n  | ToggleListDrawer\r\n  | SortTickList\r\n  | ExpandedTickListType\r\n  | SetActiveTag\r\n  | FocusQuantity\r\n  | FocusSpeciesName\r\n  | AddPlayer\r\n  | SetPlayerValue\r\n  | ResetGame;\r\n","import React from 'react';\r\nimport { GameState, initialGameState } from './state';\r\nimport { GameActions } from './actions';\r\n\r\nexport const GameContext = React.createContext<{\r\n  state: GameState;\r\n  dispatch: React.Dispatch<GameActions>;\r\n}>({\r\n  state: initialGameState,\r\n  dispatch: () => undefined,\r\n});\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable no-console */\r\nexport default class ConsoleHelper {\r\n  static log = (message?: any, ...optionalParams: any[]) => {\r\n    if (process.env.NODE_ENV === 'production') return;\r\n    console.log(message, ...optionalParams);\r\n  };\r\n\r\n  static warn = (message?: any, ...optionalParams: any[]) => {\r\n    if (process.env.NODE_ENV === 'production') return;\r\n    console.warn(message, ...optionalParams);\r\n  };\r\n\r\n  static error = (message?: any, ...optionalParams: any[]) => {\r\n    if (process.env.NODE_ENV === 'production') return;\r\n    console.error(message, ...optionalParams);\r\n  };\r\n\r\n  static table = (tabularData: any, properties?: ReadonlyArray<string>) => {\r\n    if (process.env.NODE_ENV === 'production') return;\r\n    console.table(tabularData, properties);\r\n  };\r\n}\r\n","import { Player, GameState, Status, initialGameState, SortTickListEnum } from './state';\r\nimport {\r\n  ActionType,\r\n  AddPlayer,\r\n  FocusQuantity,\r\n  FocusSpeciesName,\r\n  GameActions,\r\n  ResetGame,\r\n  SetPlayerValue,\r\n  SetActiveTag,\r\n  ToggleListView,\r\n  ToggleListDrawer,\r\n  SortTickList,\r\n  ExpandedTickListType,\r\n} from './actions';\r\nimport { ListTypeEnum } from '../enums/listTypeEnum';\r\nimport ConsoleHelper from '../helpers/consoleHelper';\r\n\r\nexport function gameReducer(state: GameState, action: GameActions): GameState {\r\n  ConsoleHelper.log('gameReducer', state, action);\r\n  switch (action.type) {\r\n    case ActionType.ToggleListView:\r\n      return { ...state, listViewType: !state.listViewType };\r\n    case ActionType.ToggleListDrawer:\r\n      return { ...state, listDrawerVisible: !state.listDrawerVisible };\r\n    case ActionType.SortTickList:\r\n      return { ...state, sortListAsc: !state.sortListAsc, sortListBy: action.payload.sortBy };\r\n    case ActionType.ExpandedTickListType:\r\n      return { ...state, expandedTickListType: action.payload.expandedTickListType };\r\n    case ActionType.SetActiveTag:\r\n      return { ...state, activeTagId: action.payload.activeTagId };\r\n    case ActionType.FocusQuantity:\r\n      return { ...state, focusQuantity: true, focusSpeciesName: false };\r\n    case ActionType.FocusSpeciesName:\r\n      return { ...state, focusQuantity: false, focusSpeciesName: true };\r\n    case ActionType.AddPlayer:\r\n      return { ...state, players: [action.payload, ...state.players] };\r\n    case ActionType.ResetGame:\r\n      return {\r\n        ...initialGameState,\r\n        players: state.players.map((player) => ({\r\n          ...player,\r\n          status: Status.NotStarted,\r\n          value: 0,\r\n        })),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst getWinner = (players: Player[]): Player | null => {\r\n  let winnerValue = 0;\r\n  let winner = null;\r\n  players.forEach((player) => {\r\n    if (player.value && player.value > winnerValue) {\r\n      winner = player;\r\n      winnerValue = player.value || 0;\r\n    }\r\n  });\r\n  return winner;\r\n};\r\n\r\n// helper functions to simplify the caller\r\nexport const addPlayer = (player: Player): AddPlayer => ({\r\n  type: ActionType.AddPlayer,\r\n  payload: player,\r\n});\r\n\r\nexport const setPlayerValue = (id: number, value: number): SetPlayerValue => ({\r\n  type: ActionType.SetPlayerValue,\r\n  payload: { id, value },\r\n});\r\n\r\nexport const setListSort = (sortBy: SortTickListEnum): SortTickList => ({\r\n  type: ActionType.SortTickList,\r\n  payload: { sortBy },\r\n});\r\n\r\nexport const setExpandedListType = (expandedTickListType: ListTypeEnum): ExpandedTickListType => ({\r\n  type: ActionType.ExpandedTickListType,\r\n  payload: { expandedTickListType },\r\n});\r\n\r\nexport const setActiveTagId = (activeTagId: number | null): SetActiveTag => ({\r\n  type: ActionType.SetActiveTag,\r\n  payload: { activeTagId },\r\n});\r\n\r\nexport const resetGame = (): ResetGame => ({\r\n  type: ActionType.ResetGame,\r\n});\r\n\r\nexport const toogleListViewType = (): ToggleListView => ({\r\n  type: ActionType.ToggleListView,\r\n});\r\n\r\nexport const toogleListDrawer = (): ToggleListDrawer => ({\r\n  type: ActionType.ToggleListDrawer,\r\n});\r\n\r\nexport const focusQuantity = (): FocusQuantity => ({\r\n  type: ActionType.FocusQuantity,\r\n});\r\n\r\nexport const focusSpeciesName = (): FocusSpeciesName => ({\r\n  type: ActionType.FocusSpeciesName,\r\n});\r\n","import { ExpandMore, ListAlt, Star, InfoOutlined } from '@mui/icons-material';\r\nimport {\r\n  Paper,\r\n  Box,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  AccordionDetails,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from '@mui/material';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useContext, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { db } from 'src/database';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { ListTypeEnum } from 'src/shared/enums/listTypeEnum';\r\nimport { GameContext } from 'src/shared/state/context';\r\nimport { setExpandedListType } from 'src/shared/state/reducer';\r\n\r\ntype TickListOverviewProps = {\r\n  persistChanges?: boolean;\r\n  excludeTickListId?: number;\r\n  callback?: (list: TickList) => void;\r\n};\r\n\r\nexport const TickListOverview = (props: TickListOverviewProps) => {\r\n  const { callback, persistChanges, excludeTickListId } = props;\r\n  const { state, dispatch } = useContext(GameContext);\r\n  const [expanded, setExpanded] = useState<boolean>(true);\r\n  const [activeListType, setActiveListType] = useState<ListTypeEnum>(state.expandedTickListType);\r\n\r\n  const handleChange = (listType: ListTypeEnum) => (event: React.SyntheticEvent, isExpanded: boolean) => {\r\n    setExpanded(isExpanded);\r\n    if (persistChanges) {\r\n      dispatch(setExpandedListType(listType));\r\n    } else {\r\n      setActiveListType(listType);\r\n    }\r\n  };\r\n\r\n  const allLists = useLiveQuery(() => db.tickList.toArray());\r\n\r\n  const listTypes = Object.values(ListTypeEnum);\r\n\r\n  const setListName = (listType: ListTypeEnum) => {\r\n    switch (listType) {\r\n      case ListTypeEnum.Landskap:\r\n        return 'Landskap';\r\n      case ListTypeEnum.Lokal:\r\n        return 'Lokal';\r\n      case ListTypeEnum.Kommun:\r\n        return 'Kommun';\r\n      case ListTypeEnum.Custom:\r\n        return 'Övriga';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const [tickLists, setTickLists] = useState<TickList[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (allLists !== undefined) {\r\n      if (excludeTickListId) {\r\n        setTickLists(allLists.filter((x) => x.id !== excludeTickListId));\r\n      } else {\r\n        setTickLists(allLists);\r\n      }\r\n    }\r\n  }, [allLists]);\r\n\r\n  useEffect(() => {\r\n    setActiveListType(state.expandedTickListType);\r\n  }, [state.expandedTickListType]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        '& .MuiListItemIcon-root': {\r\n          minWidth: '2rem',\r\n        },\r\n        '& .MuiListItemSecondaryAction-root': {\r\n          fontWeight: 600,\r\n        },\r\n        '& .MuiAccordionSummary-content': {\r\n          m: 0,\r\n        },\r\n        '& a': {\r\n          color: 'text.primary',\r\n        },\r\n      }}\r\n    >\r\n      {!allLists ||\r\n        (!tickLists.length && (\r\n          <Paper>\r\n            <Typography variant='h6' sx={{ py: 1, px: 2, display: 'flex', alignItems: 'center' }}>\r\n              <InfoOutlined fontSize='small' sx={{ color: 'text.disabled', mr: 1 }} />\r\n              {excludeTickListId ? 'Listor att jämföra saknas' : 'Listor saknas'}\r\n            </Typography>\r\n          </Paper>\r\n        ))}\r\n      {allLists &&\r\n        tickLists &&\r\n        listTypes.map((type) => {\r\n          const currentTickList = tickLists.filter((item: TickList) => item.listType === type);\r\n          if (!currentTickList.length) return null;\r\n          return (\r\n            <Accordion expanded={expanded && type === activeListType} onChange={handleChange(type)} key={type}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMore />}\r\n                sx={{\r\n                  '& .MuiAccordionSummary-content': {\r\n                    alignItems: 'center',\r\n                  },\r\n                }}\r\n              >\r\n                <Typography variant='h6' component='span' sx={{ fontWeight: 600 }}>\r\n                  {setListName(type)}\r\n                </Typography>\r\n                <Typography component='span' sx={{ ml: 1 }}>\r\n                  ({currentTickList.length})\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails\r\n                sx={{\r\n                  p: 0,\r\n                }}\r\n              >\r\n                <Divider />\r\n                <List component='div' disablePadding>\r\n                  {currentTickList\r\n                    .sort((a, b) => {\r\n                      return a.listName > b.listName ? 1 : -1;\r\n                    })\r\n                    .map((item: TickList, index: number) => {\r\n                      return (\r\n                        <ListItem\r\n                          key={item.id}\r\n                          secondaryAction={\r\n                            <Typography\r\n                              component='span'\r\n                              variant='body2'\r\n                              sx={{\r\n                                borderRadius: 1,\r\n                                backgroundColor: 'secondary.main',\r\n                                color: 'white',\r\n                                px: 0.8,\r\n                                py: 0.3,\r\n                                fontWeight: 500,\r\n                              }}\r\n                            >\r\n                              {item.tickCount}\r\n                            </Typography>\r\n                          }\r\n                          {...(callback ? { onClick: () => callback(item) } : { component: Link, to: `/list/${item.id}` })}\r\n                          divider={index !== currentTickList.length - 1}\r\n                          dense\r\n                        >\r\n                          <ListItemIcon>\r\n                            <ListAlt />\r\n                          </ListItemIcon>\r\n                          <ListItemText\r\n                            primary={\r\n                              <>\r\n                                {item.listName} {item.year}\r\n                                {item.favourite ? (\r\n                                  <Star\r\n                                    fontSize='small'\r\n                                    sx={{\r\n                                      ml: '5px',\r\n                                      mt: '2px',\r\n                                      fontSize: '14px',\r\n                                      verticalAlign: 'baseline',\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                              </>\r\n                            }\r\n                          />\r\n                        </ListItem>\r\n                      );\r\n                    })}\r\n                </List>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          );\r\n        })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nTickListOverview.defaultProps = {\r\n  persistChanges: true,\r\n  excludeTickListId: null,\r\n  callback: undefined,\r\n};\r\n","import { Chip, Typography } from '@mui/material';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { db } from 'src/database';\r\nimport { Tag } from 'src/database/models/tag';\r\nimport { TagList } from 'src/database/models/tagList';\r\n\r\ntype EditTickListTagsProps = {\r\n  tickListId: number;\r\n};\r\n\r\nexport interface TagWithList extends Tag {\r\n  hasCurrentList: boolean;\r\n}\r\n\r\nexport const EditTickListTags = (props: EditTickListTagsProps) => {\r\n  const { tickListId } = props;\r\n  const [tags, setTags] = useState<TagWithList[]>([]);\r\n\r\n  const currentTagLists = useLiveQuery(() => db.tagLists.where('tickListId').equals(tickListId).toArray());\r\n  const allTags = useLiveQuery(() => db.tags.toArray());\r\n  useEffect(() => {\r\n    if (allTags !== undefined) {\r\n      const mapptedTags = allTags.map((x) => {\r\n        return { ...x, hasCurrentList: !!currentTagLists?.filter((tag) => tag.tagId === x.id).length };\r\n      });\r\n      setTags(mapptedTags);\r\n    }\r\n  }, [allTags, currentTagLists]);\r\n\r\n  const toggleTag = async (tag: TagWithList) => {\r\n    console.log('toggleTag', tag.id, tag.hasCurrentList, tickListId);\r\n    if (tag.hasCurrentList) {\r\n      await db.tagLists\r\n        .where('tickListId')\r\n        .equals(tickListId)\r\n        .and((x) => x.tagId === tag.id)\r\n        .delete();\r\n    } else {\r\n      await db.tagLists.add({ tagId: tag.id, tickListId } as unknown as TagList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='caption' component='div'>\r\n        Välj en eller flera taggar ({tags.filter((x) => x.hasCurrentList).length} valda)\r\n      </Typography>\r\n      {tags &&\r\n        tags.map((item: TagWithList) => (\r\n          <Chip\r\n            label={item.name}\r\n            key={item.id}\r\n            sx={{\r\n              backgroundColor: item.color,\r\n              mr: 0.5,\r\n              mb: 0.5,\r\n              color: 'white',\r\n              fontWeight: 600,\r\n            }}\r\n            {...(item.hasCurrentList ? { onDelete: () => toggleTag(item) } : null)}\r\n            onClick={() => toggleTag(item)}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { ListTypeEnum } from 'src/shared/enums/listTypeEnum';\r\nimport { db } from 'src/database';\r\nimport { toast } from 'react-toastify';\r\nimport { EditTickListTags } from './editTickListTags';\r\n\r\nexport type EditTickListDialogProps = {\r\n  tickList: TickList | null;\r\n  value: string | null;\r\n  open: boolean;\r\n  onClose: (value?: any) => void;\r\n};\r\n\r\nexport const EditTickListDialog = (props: EditTickListDialogProps) => {\r\n  const { tickList, onClose, value: valueProp, open, ...other } = props;\r\n\r\n  const [listName, setListName] = useState<string>(tickList?.listName || 'Lista');\r\n  const changeListName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setListName(event.target.value as string);\r\n  };\r\n\r\n  const [listType, setListType] = useState<ListTypeEnum>(tickList?.listType || ListTypeEnum.Custom);\r\n  const changeListType = (event: SelectChangeEvent) => {\r\n    setListType(event.target.value as ListTypeEnum);\r\n  };\r\n\r\n  const dialogId = `editticklist-dialog-title-${Date.now().toString(36) + Math.random().toString(36).substring(2)}`;\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (tickList?.id) {\r\n      db.tickList\r\n        .update(tickList.id, {\r\n          listName,\r\n          listType,\r\n        })\r\n        .then(() => {\r\n          toast.success('Listan uppdaterades');\r\n          onClose({ id: props.value });\r\n        });\r\n    } else {\r\n      db.tickList\r\n        .add({\r\n          listName,\r\n          listType,\r\n          tickCount: 0,\r\n          ticks: [],\r\n          created: new Date(),\r\n          updated: new Date(),\r\n          favourite: false,\r\n        } as unknown as TickList)\r\n        .then(() => {\r\n          toast.success('Listan skapades');\r\n          onClose({ id: null });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog onBackdropClick={() => false} disableEscapeKeyDown aria-labelledby={dialogId} open={open} {...other}>\r\n      <DialogTitle id={dialogId}>Redigera artlista</DialogTitle>\r\n      <DialogContent>\r\n        <TextField fullWidth label='Listans namn' variant='outlined' size='small' value={listName} onChange={changeListName} sx={{ mt: 3 }} />\r\n        <FormControl fullWidth sx={{ my: 3 }}>\r\n          <InputLabel id='demo-simple-select-label'>Typ av lista</InputLabel>\r\n          <Select\r\n            labelId='demo-simple-select-label'\r\n            size='small'\r\n            id='demo-simple-select'\r\n            value={listType}\r\n            label='Typ av lista'\r\n            onChange={changeListType}\r\n          >\r\n            <MenuItem value={ListTypeEnum.Landskap}>{ListTypeEnum.Landskap}</MenuItem>\r\n            <MenuItem value={ListTypeEnum.Kommun}>{ListTypeEnum.Kommun}</MenuItem>\r\n            <MenuItem value={ListTypeEnum.Lokal}>{ListTypeEnum.Lokal}</MenuItem>\r\n            <MenuItem value={ListTypeEnum.Custom}>{ListTypeEnum.Custom}</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        {tickList && <EditTickListTags tickListId={tickList.id} />}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel} color='primary' sx={{ mr: 1 }}>\r\n          Avbryt\r\n        </Button>\r\n        <Button onClick={handleOk} color='primary' variant='contained'>\r\n          Spara\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@mui/material';\r\nimport { PostAdd, AddCircle } from '@mui/icons-material';\r\nimport { TickListOverview } from 'src/modules/lists/components/tickListOverview';\r\nimport { RoutesEnum } from 'src/shared/enums/routes.enum';\r\nimport { EditTickListDialog } from 'src/modules/lists/components/editTickListDialog';\r\n\r\nexport const ListOverviewPage = () => {\r\n  const [openAddDialog, setOpenAddDialog] = useState<boolean>(false);\r\n  const createList = () => {\r\n    setOpenAddDialog(true);\r\n  };\r\n\r\n  const handleCloseEditTickDialog = () => {\r\n    setOpenAddDialog(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {openAddDialog && <EditTickListDialog tickList={null} open={openAddDialog} onClose={handleCloseEditTickDialog} value={null} />}\r\n      <TickListOverview />\r\n      <Button\r\n        size='large'\r\n        color='primary'\r\n        variant='contained'\r\n        sx={{\r\n          mt: 2,\r\n          width: '100%',\r\n        }}\r\n        component={Link}\r\n        to={RoutesEnum.ListImport}\r\n        startIcon={<PostAdd />}\r\n      >\r\n        Importera lista\r\n      </Button>\r\n      <Button\r\n        size='large'\r\n        color='primary'\r\n        variant='contained'\r\n        sx={{\r\n          mt: 2,\r\n          width: '100%',\r\n        }}\r\n        onClick={createList}\r\n        startIcon={<AddCircle />}\r\n      >\r\n        Skapa lista\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","import { ContentCopy, ExpandMore, InfoOutlined, FavoriteOutlined } from '@mui/icons-material';\r\nimport { Paper, Typography, Button, Link, Accordion, AccordionDetails, AccordionSummary, Divider } from '@mui/material';\r\nimport { useState } from 'react';\r\n\r\nexport const CopyInstructions = () => {\r\n  const [expanded, setExpanded] = useState<string | false>(false);\r\n\r\n  const handleChange = (panel: string) => (event: React.SyntheticEvent, isExpanded: boolean) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={expanded === 'panel1'}\r\n      onChange={handleChange('panel1')}\r\n      sx={{\r\n        my: 2,\r\n        borderRadius: 1,\r\n        '&:before': {\r\n          display: 'none',\r\n        },\r\n        '& ul': {\r\n          paddingLeft: '1.3rem',\r\n          '& li': {\r\n            mb: 1,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <AccordionSummary expandIcon={<ExpandMore />} aria-controls='panel1bh-content' id='panel1bh-header'>\r\n        <InfoOutlined fontSize='small' sx={{ color: 'text.disabled', mr: 1, mt: '1px' }} />\r\n        <Typography sx={{ fontWeight: 500 }}>Hur importerar man listor?</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography variant='body2'>Följ nedanstående instruktionerna för att kopiera dina listor från Artportalen (en i taget).</Typography>\r\n        <Typography variant='body2' component='div'>\r\n          <ul>\r\n            <li>\r\n              Surfa till <Link href='https://www.artportalen.se'>Artportalen</Link>\r\n            </li>\r\n            <li>\r\n              Skapa ett nytt bokmärke (namnge det <em>Kopiera lista</em> eller liknande).\r\n            </li>\r\n            <li>Tryck på knappen nedan.</li>\r\n          </ul>\r\n          <Button\r\n            size='medium'\r\n            color='primary'\r\n            variant='outlined'\r\n            sx={{\r\n              display: 'flex',\r\n              ml: '1.3rem',\r\n            }}\r\n            startIcon={<ContentCopy />}\r\n          >\r\n            Skapa bokmärke\r\n          </Button>\r\n\r\n          <ul>\r\n            <li>Redigera bokmärke du skapade och klistra in koden du nyss kopierade i fältet för webbadress. Spara bokmärket med koden.</li>\r\n            <li>Öppna en lista i Artportalen (logga in så får du med skyddade fynd).</li>\r\n            <li>Klicka på bokmärket du nyss skapade.</li>\r\n            <li>Kopiera resultatet som visas på skärmen</li>\r\n            <li>\r\n              Klistra in i rutan ovan och klicka på knappen <em>Importera</em>\r\n            </li>\r\n          </ul>\r\n        </Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Typography variant='caption' component='div'>\r\n          <FavoriteOutlined sx={{ fontSize: '0.7rem', mr: 1 }} />\r\n          Gillar du den här appen? Swisha eller skicka en annan uppmuntran till kreatören...\r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n","import { ArrowDownward, ArrowUpward } from '@mui/icons-material';\r\nimport { Button } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { GameContext } from 'src/shared/state/context';\r\nimport { setListSort } from 'src/shared/state/reducer';\r\nimport { SortTickListEnum } from 'src/shared/state/state';\r\n\r\nexport type SortListButtonProps = {\r\n  label: string;\r\n  sortKey: SortTickListEnum;\r\n};\r\n\r\nexport const SortListButton = (props: SortListButtonProps) => {\r\n  const { label, sortKey } = props;\r\n  const { state, dispatch } = useContext(GameContext);\r\n\r\n  const setSort = () => {\r\n    dispatch(setListSort(sortKey));\r\n  };\r\n\r\n  const isActive = state.sortListBy === sortKey;\r\n\r\n  return (\r\n    <Button sx={{ fontWeight: isActive ? 700 : 400 }} size='small' onClick={() => setSort()}>\r\n      {label}\r\n      {isActive && state.sortListAsc && <ArrowUpward sx={{ pl: 0.5, fontSize: '1.5rem' }} />}\r\n      {isActive && !state.sortListAsc && <ArrowDownward sx={{ pl: 0.5, fontSize: '1.5rem' }} />}\r\n    </Button>\r\n  );\r\n};\r\n\r\nSortListButton.defaultProps = {\r\n  isActive: false,\r\n  sortAscending: false,\r\n};\r\n","import { Taxon } from 'src/database/models/taxon';\r\n\r\ntype SpeciesNameFormattedProps = {\r\n  name: string;\r\n  rank: number;\r\n};\r\nexport const SpeciesNameFormatted = (props: SpeciesNameFormattedProps) => {\r\n  const { name, rank } = props;\r\n\r\n  return (\r\n    <span\r\n      className={`speciesName \r\n        ${rank < 3000 ? 'red' : ''} \r\n        ${rank < 20000 ? 'bold' : ''}\r\n      `}\r\n    >\r\n      {name}\r\n    </span>\r\n  );\r\n};\r\n","import { List, ListItem, ListItemIcon, Typography, ListItemText } from '@mui/material';\r\nimport { WindowOutlined } from '@mui/icons-material';\r\nimport { SortListButton } from 'src/shared/components/atoms/sortListButton';\r\nimport { TaxonDisplay } from 'src/shared/models/taxonDisplay';\r\nimport { SortTickListEnum } from 'src/shared/state/state';\r\nimport { SpeciesNameFormatted } from './seciesNameFormatted';\r\n\r\ntype SortableTickListProps = {\r\n  taxaList: TaxonDisplay[];\r\n};\r\n\r\nexport const SortableTickList = (props: SortableTickListProps) => {\r\n  const { taxaList } = props;\r\n  return (\r\n    <>\r\n      <List\r\n        sx={{\r\n          mx: -2,\r\n          bgcolor: 'background.paper',\r\n          p: 0,\r\n          '& .MuiListItemSecondaryAction-root': {\r\n            right: 7,\r\n          },\r\n          '& li:nth-of-type(even)': { backgroundColor: 'rgba(0,0,0,0.025)' },\r\n          '& li.custom': {\r\n            pl: 0,\r\n            pr: 1,\r\n            py: 0.5,\r\n            position: 'relative',\r\n            borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n            '& small.count': {\r\n              fontFamily: 'inherit',\r\n              pl: 1,\r\n              pr: 2,\r\n              minWidth: '3.2rem',\r\n              flexShrink: 0,\r\n              display: 'inline-flex',\r\n              justifyContent: 'flex-end',\r\n              textAlign: 'right',\r\n              color: 'rgba(0,0,0,0.3)',\r\n            },\r\n            '& small.date': {\r\n              position: 'absolute',\r\n              right: '16px',\r\n              top: '50%',\r\n              transform: 'translateY(-50%)',\r\n            },\r\n            '& small': {\r\n              fontWeight: 400,\r\n              fontSize: '0.75rem',\r\n              lineHeight: 1.66,\r\n              letterSpacing: '0.03333em',\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <ListItem\r\n          dense\r\n          divider\r\n          sx={{\r\n            p: 0,\r\n            borderBottomWidth: 2,\r\n          }}\r\n          secondaryAction={<SortListButton label='Datum' sortKey={SortTickListEnum.Date} />}\r\n        >\r\n          <ListItemIcon sx={{ justifyContent: 'flex-end', pr: 2, pl: 1, minWidth: '3rem' }}>\r\n            <Typography variant='caption' textAlign='right' sx={{ color: 'rgba(0,0,0,0.3)' }}>\r\n              #\r\n            </Typography>\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={<SortListButton label='Artnamn' sortKey={SortTickListEnum.SpeciesName} />}\r\n            sx={{\r\n              p: 0,\r\n            }}\r\n          />\r\n        </ListItem>\r\n        {taxaList &&\r\n          taxaList.map((item: TaxonDisplay, index: number) => (\r\n            <li className='custom' key={item.taxonId}>\r\n              <small className='count'>{index + 1}</small>\r\n              <SpeciesNameFormatted name={item.name} rank={item.rank} />\r\n              <small className='date'>{item.date.toString()}</small>\r\n            </li>\r\n            // <ListItem\r\n            //   key={item.taxonId}\r\n            //   secondaryAction={<Typography variant='caption'>{item.date}</Typography>}\r\n            //   dense\r\n            //   divider\r\n            //   sx={{\r\n            //     pl: 0,\r\n            //   }}\r\n            // >\r\n            //   <ListItemIcon sx={{ justifyContent: 'flex-end', pr: 2, pl: 1, minWidth: '2.5rem' }}>\r\n            //     <Typography variant='caption' textAlign='right' sx={{ color: 'rgba(0,0,0,0.3)' }}>\r\n            //       {index + 1}\r\n            //     </Typography>\r\n            //   </ListItemIcon>\r\n            //   <ListItemText\r\n            //     primary={\r\n            //       <Typography\r\n            //         variant='subtitle1'\r\n            //         sx={{\r\n            //           lineHeight: 1,\r\n            //           fontWeight: item.rank < 15000 ? 500 : 300,\r\n            //           color: item.rank < 1000 ? 'red' : 'inherit',\r\n            //         }}\r\n            //       >\r\n            //         {item.name}\r\n            //       </Typography>\r\n            //     }\r\n            //   />\r\n            // </ListItem>\r\n          ))}\r\n      </List>\r\n      {!taxaList ||\r\n        (!taxaList.length && (\r\n          <>\r\n            <Typography\r\n              variant='h4'\r\n              textAlign='center'\r\n              sx={{\r\n                mt: 5,\r\n                color: 'text.disabled',\r\n                justifyContent: 'center',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n              }}\r\n            >\r\n              <span style={{ width: '100%' }}>Listan är tom</span>\r\n              <WindowOutlined sx={{ fontSize: '5rem', mt: 1, opacity: 0.2 }} />\r\n            </Typography>\r\n          </>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n","import { Tabs, Tab } from '@mui/material';\r\nimport { useState } from 'react';\r\n\r\ninterface TabItem {\r\n  id: number;\r\n  label: string;\r\n}\r\n\r\ntype TickListTabsProps = {\r\n  tabItems: TabItem[];\r\n  callback: (activeTab: number) => void;\r\n};\r\n\r\nexport const TickListTabs = (props: TickListTabsProps) => {\r\n  const { callback, tabItems } = props;\r\n  const [activeTab, setActiveTab] = useState(0);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setActiveTab(newValue);\r\n    callback(newValue);\r\n  };\r\n\r\n  return (\r\n    <Tabs\r\n      value={activeTab}\r\n      onChange={handleTabChange}\r\n      aria-label='basic tabs example'\r\n      sx={{\r\n        minHeight: '2rem',\r\n        pl: 2,\r\n        '& .MuiButtonBase-root': { minHeight: '2.5rem', fontSize: '0.75rem', mx: '5px' },\r\n        // '& .Mui-selected': { backgroundColor: 'rgba(48, 95, 120, 0.08)' },\r\n      }}\r\n    >\r\n      {tabItems.map((item: TabItem) => (\r\n        <Tab label={item.label} key={item.id} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport type DeleteConfirmationDialogProps = {\r\n  title: string;\r\n  modaltext?: string;\r\n  value: string | null;\r\n  open: boolean;\r\n  onClose: (value?: any) => void;\r\n};\r\n\r\nexport const DeleteConfirmationDialog = (props: DeleteConfirmationDialogProps) => {\r\n  const { title, modaltext, onClose, value: valueProp, open, ...other } = props;\r\n\r\n  const dialogId = `confirmation-dialog-title-${Date.now().toString(36) + Math.random().toString(36).substring(2)}`;\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    onClose({ id: props.value });\r\n  };\r\n\r\n  return (\r\n    <Dialog onBackdropClick={() => false} disableEscapeKeyDown maxWidth='xs' aria-labelledby={dialogId} open={open} {...other}>\r\n      <DialogTitle id={dialogId}>{title}</DialogTitle>\r\n      {modaltext && <DialogContent>{modaltext}</DialogContent>}\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel} color='primary'>\r\n          Avbryt\r\n        </Button>\r\n        <Button onClick={handleOk} color='primary' variant='contained'>\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { ExpandMore, Download, Delete, ExitToApp, Star, StarBorder, Edit, MoreVert } from '@mui/icons-material';\r\nimport { Box, Button, Divider, ListItemIcon, Menu, MenuItem, Typography } from '@mui/material';\r\nimport { db } from 'src/database';\r\nimport React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { Tick } from 'src/database/models/tick';\r\nimport { DeleteConfirmationDialog } from 'src/shared/components/organisms/deleteConfirmationDialog';\r\nimport { RoutesEnum } from 'src/shared/enums/routes.enum';\r\nimport { EditTickListDialog } from './editTickListDialog';\r\n\r\ntype TickListActionMenuProps = {\r\n  tickList: TickList;\r\n};\r\n\r\nexport const TickListActionMenu = (props: TickListActionMenuProps) => {\r\n  const { tickList } = props;\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const toggleFavourite = () => {\r\n    if (tickList !== undefined) {\r\n      toast.success(!tickList.favourite ? 'Lades till som favorit' : 'Favorit borttagen');\r\n      db.tickList.where('id').equals(tickList.id).modify({\r\n        favourite: !tickList.favourite,\r\n      });\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const createCSV = () => {\r\n    const csvString = [['TaxonId', 'Datum'], ...tickList.ticks.map((item: Tick) => [item.taxonId, item.date])].map((e) => e.join(',')).join('\\n');\r\n\r\n    console.log(csvString);\r\n  };\r\n\r\n  const gotToAp = () => {\r\n    window.open(tickList.apUrl);\r\n    handleClose();\r\n  };\r\n\r\n  const [deleteId, setDeleteId] = React.useState<string | null>(null);\r\n\r\n  const showDeleteConfirmationDialog = () => {\r\n    setDeleteId(`${tickList.id}`);\r\n  };\r\n\r\n  const handleCloseDialog = async (newValue: any) => {\r\n    setDeleteId(newValue);\r\n\r\n    if (newValue) {\r\n      toast.success('Listan raderades');\r\n      await db.tickList.where('id').equals(tickList.id).delete();\r\n      history.push(RoutesEnum.ListOverview);\r\n    }\r\n  };\r\n\r\n  const [tickListId, setTickListId] = React.useState<string | null>(null);\r\n\r\n  const showEditTickListDialog = () => {\r\n    setTickListId(`${tickList.id}`);\r\n  };\r\n\r\n  const handleCloseEditTickDialog = () => {\r\n    setTickListId(null);\r\n  };\r\n\r\n  const formatDate = (inputDate: Date) => {\r\n    return `${inputDate.toISOString().substring(0, 10)} ${inputDate.toLocaleTimeString().substring(0, 5)}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {tickList && <EditTickListDialog tickList={tickList} open={!!tickListId} onClose={handleCloseEditTickDialog} value={tickListId} />}\r\n      <DeleteConfirmationDialog title='Vill du radera listan?' modaltext='' open={!!deleteId} onClose={handleCloseDialog} value={deleteId} />\r\n      <Button\r\n        variant='outlined'\r\n        color='primary'\r\n        size='small'\r\n        sx={{\r\n          padding: 0,\r\n          minWidth: '2rem',\r\n          height: '2rem',\r\n          lineHeight: 1,\r\n          color: 'text.secondary',\r\n          borderColor: '#ccc',\r\n        }}\r\n        id='basic-button'\r\n        aria-controls='basic-menu'\r\n        aria-haspopup='true'\r\n        aria-expanded={open ? 'true' : undefined}\r\n        onClick={handleClick}\r\n      >\r\n        <ExpandMore />\r\n      </Button>\r\n      <Menu\r\n        id='basic-menu'\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        <MenuItem onClick={() => showEditTickListDialog()}>\r\n          <ListItemIcon>\r\n            <Edit fontSize='small' />\r\n          </ListItemIcon>\r\n          Redigera lista\r\n        </MenuItem>\r\n        <MenuItem onClick={() => toggleFavourite()}>\r\n          {tickList.favourite && (\r\n            <>\r\n              <ListItemIcon>\r\n                <StarBorder fontSize='small' />\r\n              </ListItemIcon>\r\n              Tabort favorit\r\n            </>\r\n          )}\r\n          {!tickList.favourite && (\r\n            <>\r\n              <ListItemIcon>\r\n                <Star fontSize='small' />\r\n              </ListItemIcon>\r\n              Gör till favorit\r\n            </>\r\n          )}\r\n        </MenuItem>\r\n        {tickList.apUrl && (\r\n          <MenuItem onClick={() => gotToAp()}>\r\n            <ListItemIcon>\r\n              <ExitToApp fontSize='small' />\r\n            </ListItemIcon>\r\n            Öppna i Artportalen\r\n          </MenuItem>\r\n        )}\r\n        <MenuItem onClick={() => createCSV()}>\r\n          <ListItemIcon>\r\n            <Download fontSize='small' />\r\n          </ListItemIcon>\r\n          Exportera lista (csv)\r\n        </MenuItem>\r\n        <MenuItem divider onClick={() => showDeleteConfirmationDialog()}>\r\n          <ListItemIcon>\r\n            <Delete fontSize='small' />\r\n          </ListItemIcon>\r\n          Radera listan\r\n        </MenuItem>\r\n        <MenuItem sx={{ flexDirection: 'column', justifyContent: 'flex-start', pt: 2 }}>\r\n          <Typography variant='caption' sx={{ color: 'text.secondary' }}>\r\n            <strong>Uppdaterad: </strong>\r\n            {formatDate(tickList.updated)}\r\n            <br />\r\n            <strong>Skapad: </strong>\r\n            {formatDate(tickList.created)}\r\n          </Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n","import { Star } from '@mui/icons-material';\r\nimport { Box, Typography, Grow } from '@mui/material';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { TickListActionMenu } from './tickListActionMenu';\r\n\r\ntype TickListNameProps = {\r\n  tickList: TickList;\r\n};\r\n\r\nexport const TickListName = (props: TickListNameProps) => {\r\n  const { tickList } = props;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        pt: 4,\r\n        px: 2,\r\n        pb: 2,\r\n        mt: -3,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n      }}\r\n    >\r\n      {tickList && tickList.listName && (\r\n        <>\r\n          <Typography variant='h5' sx={{ display: 'flex' }} gutterBottom>\r\n            <Box sx={{ mr: 1.5 }}>\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  backgroundColor: 'secondary.dark',\r\n                  py: 0.5,\r\n                  px: 1,\r\n                  color: '#fff',\r\n                  borderRadius: '5px',\r\n                }}\r\n              >\r\n                {tickList?.tickCount}\r\n              </Box>\r\n            </Box>\r\n            <Box sx={{ lineHeight: 1 }}>\r\n              <Typography\r\n                variant='caption'\r\n                component='div'\r\n                sx={{\r\n                  lineHeight: '0.7rem',\r\n                  color: 'text.secondary',\r\n                }}\r\n              >\r\n                {tickList.listType}\r\n              </Typography>\r\n              {tickList?.listName} <small>{tickList?.year}</small>\r\n              <Grow in={tickList.favourite}>\r\n                <Star fontSize='small' sx={{ ml: 0.5 }} />\r\n              </Grow>\r\n            </Box>\r\n          </Typography>\r\n          <TickListActionMenu tickList={tickList} />\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { CallSplit, FormatListBulleted } from '@mui/icons-material';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\ntype ToggleUniqueButtonProps = {\r\n  callback: (state: boolean) => void;\r\n};\r\n\r\nexport const ToggleUniqueButton = (props: ToggleUniqueButtonProps) => {\r\n  const { callback } = props;\r\n  const [isUnique, setIsUnique] = React.useState<boolean>(false);\r\n\r\n  const handleChange = (event: React.MouseEvent<HTMLElement>, showUnique: boolean) => {\r\n    setIsUnique(showUnique);\r\n    callback(showUnique);\r\n  };\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      size='small'\r\n      color='primary'\r\n      value={isUnique}\r\n      exclusive\r\n      onChange={handleChange}\r\n      sx={{\r\n        m: 1,\r\n        backgroundColor: 'background.paper',\r\n        '& button': {\r\n          padding: '3px 10px',\r\n        },\r\n      }}\r\n    >\r\n      <ToggleButton value={false}>\r\n        <FormatListBulleted fontSize='small' sx={{ width: '16px', height: '16px', mr: 1 }} />\r\n        Alla\r\n      </ToggleButton>\r\n      <ToggleButton value>\r\n        <CallSplit fontSize='small' sx={{ width: '16px', height: '16px', mr: 1 }} />\r\n        Unika\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\ntype GenericDialogProps = {\r\n  openDialog: boolean;\r\n  dialogTitle?: JSX.Element;\r\n  dialogContent: JSX.Element;\r\n  abortLabel?: string;\r\n  saveLabel?: string;\r\n  onClose: <T>(data?: T) => void;\r\n};\r\n\r\nexport const GenericDialog = (props: GenericDialogProps) => {\r\n  const { openDialog, dialogTitle, dialogContent, abortLabel, saveLabel, onClose } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const componentId = `dialog-${Date.now().toString(36) + Math.random().toString(36).substring(2)}`;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setOpen(openDialog);\r\n  }, [openDialog]);\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby={`${componentId}-titel`}\r\n      open={open}\r\n      maxWidth='sm'\r\n      sx={{\r\n        '& .MuiDialogContent-root': {\r\n          p: 2,\r\n        },\r\n        '& .MuiDialogActions-root': {\r\n          p: 1,\r\n        },\r\n      }}\r\n    >\r\n      {dialogTitle && (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} id={`${componentId}-titel`}>\r\n          {dialogTitle}\r\n          <IconButton\r\n            aria-label='close'\r\n            onClick={onClose}\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n      )}\r\n      <DialogContent dividers>{dialogContent}</DialogContent>\r\n      <DialogActions>\r\n        <Button color='primary' disableElevation onClick={handleClose}>\r\n          {abortLabel}\r\n        </Button>\r\n        <Button autoFocus variant='contained' color='primary' disableElevation onClick={handleClose}>\r\n          {saveLabel}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nGenericDialog.defaultProps = {\r\n  dialogTitle: null,\r\n  abortLabel: 'Avbryt',\r\n  saveLabel: 'Spara',\r\n};\r\n","import { Rating } from '@mui/material';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { db } from 'src/database';\r\nimport { WantedTick } from 'src/database/models/wantedTick';\r\nimport { WantedTickList } from 'src/database/models/wantedTickList';\r\n\r\ntype WantedRatingProps = {\r\n  tickListId: number;\r\n  taxonId: number;\r\n  rating: number;\r\n  callback: () => void;\r\n};\r\n\r\nexport const WantedRating = (props: WantedRatingProps) => {\r\n  const { tickListId, taxonId, rating, callback } = props;\r\n  const [value, setValue] = useState<number>(rating);\r\n  const [tickExists, setTickExists] = useState<boolean>(false);\r\n\r\n  const [wantedTickListTicks, setWantedTickListTicks] = useState<WantedTick[]>([]);\r\n\r\n  const wantedTickList = useLiveQuery(() => db.wantedTickList.where('tickListId').equals(tickListId).toArray());\r\n\r\n  useEffect(() => {\r\n    if (wantedTickList !== undefined && wantedTickList[0]) {\r\n      const tickExistsCheck = wantedTickList[0].ticks.some((item) => item.taxonId === taxonId);\r\n      setWantedTickListTicks(wantedTickList[0].ticks);\r\n      setTickExists(tickExistsCheck);\r\n      if (tickExistsCheck) {\r\n        setValue(wantedTickList[0].ticks.filter((x) => x.taxonId === taxonId)[0].rating);\r\n      }\r\n    }\r\n  }, [wantedTickList]);\r\n\r\n  const updateRating = (ratingValue: number | null) => {\r\n    const newTickWithRating = { taxonId, rating: ratingValue ?? 0 } as WantedTick;\r\n    if (wantedTickList && wantedTickList[0]) {\r\n      const objIndex = wantedTickList[0].ticks.findIndex((obj) => obj.taxonId === taxonId);\r\n      console.log('objIndex', objIndex);\r\n      if (objIndex > -1) {\r\n        wantedTickList[0].ticks[objIndex] = newTickWithRating;\r\n      } else {\r\n        wantedTickList[0].ticks.push(newTickWithRating);\r\n      }\r\n      toast.success(`Lade till arten som förväntad (${ratingValue})`);\r\n      db.wantedTickList\r\n        .put({\r\n          id: wantedTickList[0].id,\r\n          tickListId,\r\n          ticks: wantedTickList[0].ticks,\r\n        })\r\n        .then(() => {\r\n          callback();\r\n        });\r\n    } else {\r\n      toast.success(`Lade till arten som förväntad (${ratingValue})`);\r\n      db.wantedTickList\r\n        .add({\r\n          tickListId,\r\n          ticks: [newTickWithRating],\r\n        } as unknown as WantedTickList)\r\n        .then(() => {\r\n          callback();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {wantedTickListTicks && (\r\n        <Rating\r\n          name='simple-controlled'\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            updateRating(newValue);\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport { db } from 'src/database';\r\nimport { GenericDialog } from 'src/shared/components/organisms/genericDialog';\r\nimport { WantedRating } from './wantedRating';\r\n\r\ntype EditTickProps = {\r\n  taxonId: number;\r\n  tickListId: number;\r\n  callback: () => void;\r\n};\r\n\r\nexport const EditTick = (props: EditTickProps) => {\r\n  const { tickListId, taxonId, callback } = props;\r\n\r\n  const [selectedTaxonId, setSelectedTaxonId] = useState<number | null>(taxonId);\r\n  const [showEditTickDialog, setShowEditTickDialog] = useState<boolean>(false);\r\n\r\n  const selectedTaxaList = useLiveQuery(() => db.tickList.where('id').equals(tickListId).toArray());\r\n\r\n  const openDialog = (id: number) => {\r\n    setSelectedTaxonId(id);\r\n    setShowEditTickDialog(true);\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setSelectedTaxonId(null);\r\n    setShowEditTickDialog(false);\r\n    callback();\r\n  };\r\n\r\n  const [tickDate, setTickDate] = useState<Date>(new Date());\r\n\r\n  useEffect(() => {\r\n    if (selectedTaxonId) {\r\n      openDialog(selectedTaxonId);\r\n    }\r\n  }, [selectedTaxonId]);\r\n\r\n  useEffect(() => {\r\n    setSelectedTaxonId(taxonId);\r\n  }, [taxonId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedTaxaList !== undefined) {\r\n      console.log('selectedTaxaList', selectedTaxaList);\r\n    }\r\n  }, [selectedTaxaList]);\r\n\r\n  return (\r\n    <>\r\n      <GenericDialog\r\n        openDialog={showEditTickDialog}\r\n        dialogContent={\r\n          <>\r\n            <WantedRating taxonId={taxonId} tickListId={tickListId} rating={0} callback={closeDialog} />\r\n          </>\r\n        }\r\n        onClose={closeDialog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { IconButton, Box, Paper, Divider, Typography } from '@mui/material';\r\nimport { CheckBoxOutlineBlank, CheckBox } from '@mui/icons-material';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { db } from 'src/database';\r\nimport { Taxon } from 'src/database/models/taxon';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { Tick } from 'src/database/models/tick';\r\nimport { ToggleUniqueButton } from './toggleUniqueButton';\r\nimport { SpeciesNameFormatted } from './seciesNameFormatted';\r\nimport { EditTick } from './editTick';\r\n\r\ntype CompareGridProps = {\r\n  currentTickList: TickList;\r\n  tickListsToCompare: TickList[];\r\n};\r\n\r\ninterface CompareTaxon extends Taxon {\r\n  hasTick: boolean[];\r\n  isUnique: boolean;\r\n}\r\n\r\ninterface ListMap {\r\n  id: number;\r\n  name: string;\r\n  count: number;\r\n}\r\n\r\nexport const CompareGrid = (props: CompareGridProps) => {\r\n  const { currentTickList, tickListsToCompare } = props;\r\n\r\n  const [taxonId, setTaxonId] = useState<number | null>(0);\r\n  const [tickListId, setTickListId] = useState<number | null>(0);\r\n\r\n  const handeCloseTickEdit = useCallback(() => {\r\n    setTaxonId(null);\r\n  }, []);\r\n\r\n  const [compareTickLists, setCompareTickLists] = useState<CompareTaxon[]>([]);\r\n  const [showUnique, setShowUnique] = useState<boolean>(false);\r\n\r\n  const listMap: ListMap[] = [\r\n    {\r\n      id: currentTickList.id,\r\n      name: currentTickList.listName,\r\n      count: currentTickList.ticks.length,\r\n    },\r\n    ...tickListsToCompare.map((x) => {\r\n      return { id: x.id, name: x.listName, count: x.ticks.length } as ListMap;\r\n    }),\r\n  ];\r\n\r\n  //   const mergedTickLists = currentTickList.ticks.concat(...tickListsToCompare.map((x) => x.ticks));\r\n  //   console.log('merged', mergedTickLists);\r\n\r\n  const allTaxa = useLiveQuery(() => db.taxon.toArray());\r\n\r\n  const editCurrentTick = (hasTick: boolean, id: number, listId: number) => {\r\n    console.log('editCurrentTick', hasTick, id, listId);\r\n    if (currentTickList.id === listId && !hasTick && !currentTickList.ticks.some((x) => x.taxonId === id)) {\r\n      currentTickList.ticks.push({\r\n        taxonId: id,\r\n        date: new Date().toISOString().substring(0, 10),\r\n      } as unknown as Tick);\r\n      db.tickList\r\n        .update(listId, {\r\n          ticks: currentTickList.ticks,\r\n          tickCount: currentTickList.ticks.length,\r\n          updated: new Date(),\r\n        })\r\n        .then(function (updated) {\r\n          if (updated) console.log('Friend number 2 was renamed to Number 2');\r\n          else console.log('Nothing was updated - there were no friend with primary key: 2');\r\n        });\r\n    } else {\r\n      setTaxonId(id);\r\n      setTickListId(listId);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allTaxa !== undefined) {\r\n      const tempCompareTickLists: CompareTaxon[] = [];\r\n      allTaxa.forEach((item) => {\r\n        const hasTickArray = [];\r\n        hasTickArray.push(!!currentTickList.ticks.filter((x) => x.taxonId === item.taxonId).length);\r\n        tickListsToCompare.forEach((list) => {\r\n          hasTickArray.push(!!list.ticks.filter((x) => x.taxonId === item.taxonId).length);\r\n        });\r\n\r\n        if (hasTickArray.includes(true)) {\r\n          tempCompareTickLists.push({ ...item, hasTick: hasTickArray, isUnique: hasTickArray.includes(false) });\r\n        }\r\n      });\r\n      setCompareTickLists(tempCompareTickLists);\r\n    }\r\n  }, [allTaxa, currentTickList]);\r\n\r\n  const toggleUnique = useCallback((state: boolean) => {\r\n    console.log('toggleUnique', state);\r\n    setShowUnique(state);\r\n  }, []);\r\n\r\n  const showEditDailog = tickListId !== null && taxonId !== null;\r\n\r\n  return (\r\n    <>\r\n      {showEditDailog && <EditTick tickListId={tickListId} taxonId={taxonId} callback={handeCloseTickEdit} />}\r\n      <Paper\r\n        sx={{\r\n          overflow: 'hidden',\r\n          '& table': {\r\n            borderCollapse: 'collapse',\r\n            borderSpacing: 0,\r\n            width: '100%',\r\n          },\r\n          '& .speciesName': {\r\n            width: '100%',\r\n            verticalAlign: 'middle',\r\n          },\r\n          '& td.count': {\r\n            textAlign: 'right',\r\n            fontSize: '0.6rem',\r\n            color: 'text.disabled',\r\n            verticalAlign: 'middle',\r\n          },\r\n          '& th': {\r\n            p: 0,\r\n          },\r\n          '& tbody tr:nth-of-type(even)': { backgroundColor: 'rgba(0,0,0,0.025)' },\r\n          '& td': {\r\n            p: '1px 4px',\r\n            verticalAlign: 'top',\r\n            borderTopWidth: 1,\r\n            borderTopStyle: 'solid',\r\n            borderTopColor: 'divider',\r\n            borderRight: '1px solid #eee',\r\n          },\r\n          '& .MuiIconButton-root': {\r\n            p: 0,\r\n            minWidth: '1.5rem',\r\n            m: 0,\r\n            borderRadius: 0,\r\n            border: 'none',\r\n          },\r\n          '& .MuiSvgIcon-root': {\r\n            fontSize: '1.6rem',\r\n          },\r\n          '& .buttonwrapper': {\r\n            verticalAlign: 'bottom',\r\n            textAlign: 'right',\r\n          },\r\n        }}\r\n      >\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {!showUnique && <th>&nbsp;</th>}\r\n              {listMap.map((item) => (\r\n                <th key={item.id} className='rotate'>\r\n                  <div>\r\n                    <span>\r\n                      {item.name} <small> - {item.count}</small>\r\n                    </span>\r\n                  </div>\r\n                </th>\r\n              ))}\r\n              <th className='buttonwrapper'>\r\n                <ToggleUniqueButton callback={toggleUnique} />\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {compareTickLists &&\r\n              compareTickLists.map((item, parentIndex) => {\r\n                if (showUnique && !item.isUnique) {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={item.taxonId}>\r\n                    {!showUnique && <td className='count'>{parentIndex + 1}</td>}\r\n                    {item.hasTick.map((x, index) => (\r\n                      // variant={x ? 'contained' : 'outlined'}\r\n                      // eslint-disable-next-line react/no-array-index-key\r\n                      <td key={`${index}`}>\r\n                        <IconButton\r\n                          color={x ? 'success' : 'primary'}\r\n                          size='small'\r\n                          // disabled={!x}\r\n                          onClick={() => editCurrentTick(x, item.taxonId, listMap[index].id)}\r\n                        >\r\n                          {x && <CheckBox />}\r\n                          {!x && <CheckBoxOutlineBlank />}\r\n                        </IconButton>\r\n                      </td>\r\n                    ))}\r\n                    <td className='speciesName'>\r\n                      <SpeciesNameFormatted name={item.name} rank={item.rank} />\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n","import { Box, Paper, Stack, Chip, Button, Divider, Collapse, Typography } from '@mui/material';\r\nimport { Delete, Done, CompareArrows } from '@mui/icons-material';\r\nimport { useCallback, useState } from 'react';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { TransitionGroup } from 'react-transition-group';\r\nimport { TickListOverview } from './tickListOverview';\r\nimport { CompareGrid } from './compareGrid';\r\n\r\ntype CompareTickListProps = {\r\n  currentTickList: TickList;\r\n};\r\n\r\nexport const CompareTickLists = (props: CompareTickListProps) => {\r\n  const { currentTickList } = props;\r\n  const [activeComparison, setActiveComparison] = useState<boolean>(false);\r\n  const [selectedTickLists, setSelectedTickLists] = useState<TickList[]>([]);\r\n  const onListSelected = useCallback((list: TickList) => {\r\n    const exists = selectedTickLists.some((compareList: TickList) => {\r\n      return compareList.id === list.id;\r\n    });\r\n\r\n    if (!exists && currentTickList.id !== list.id) {\r\n      setSelectedTickLists((prevArray) => [...prevArray, list]);\r\n    }\r\n  }, []);\r\n\r\n  const toggleCompareMode = () => {\r\n    setActiveComparison(!activeComparison);\r\n  };\r\n\r\n  const handleDelete = (listId: number) => {\r\n    setSelectedTickLists(selectedTickLists.filter((item: TickList) => item.id !== listId));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2, mx: -2 }}>\r\n      {!activeComparison && (\r\n        <Paper variant='outlined' sx={{ p: 2, mb: 2 }}>\r\n          <Stack spacing={1}>\r\n            <Chip\r\n              label={currentTickList.listName}\r\n              onDelete={handleDelete}\r\n              deleteIcon={<Done />}\r\n              variant='outlined'\r\n              color='default'\r\n              sx={{\r\n                borderRadius: 1,\r\n                justifyContent: 'space-between',\r\n              }}\r\n            />\r\n            <TransitionGroup>\r\n              {selectedTickLists &&\r\n                selectedTickLists.map((list: TickList) => {\r\n                  return (\r\n                    <Collapse key={list.id}>\r\n                      <Chip\r\n                        label={`${list.listName} ${list.year ? list.year : ''}`}\r\n                        onDelete={() => handleDelete(list.id)}\r\n                        deleteIcon={<Delete />}\r\n                        variant='outlined'\r\n                        color='success'\r\n                        sx={{ borderRadius: 1, justifyContent: 'space-between', width: '100%', mb: 1 }}\r\n                      />\r\n                    </Collapse>\r\n                  );\r\n                })}\r\n            </TransitionGroup>\r\n          </Stack>\r\n          {selectedTickLists && selectedTickLists.length > 0 && (\r\n            <Button\r\n              size='large'\r\n              color='primary'\r\n              variant='contained'\r\n              sx={{\r\n                mt: 2,\r\n                width: '100%',\r\n              }}\r\n              onClick={toggleCompareMode}\r\n              startIcon={<CompareArrows />}\r\n            >\r\n              Jämför valda listor\r\n            </Button>\r\n          )}\r\n        </Paper>\r\n      )}\r\n      {activeComparison && (\r\n        <>\r\n          <CompareGrid currentTickList={currentTickList} tickListsToCompare={selectedTickLists} />\r\n        </>\r\n      )}\r\n      {!activeComparison && (\r\n        <>\r\n          <Divider sx={{ mb: 2 }}>Välj listor</Divider>\r\n          <TickListOverview persistChanges={false} callback={onListSelected} excludeTickListId={currentTickList.id} />\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n","import { Box } from '@mui/material';\r\n\r\ntype RatingIndicatorProps = {\r\n  rating: number;\r\n  index: number;\r\n};\r\n\r\nexport const RatingIndicator = (props: RatingIndicatorProps) => {\r\n  const { rating, index } = props;\r\n  const colors = ['#ffffff', '#f1f8e9', '#c5e1a5', '#9ccc65', '#7cb342', '#558b2f'];\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '1.2rem',\r\n        height: '1.2rem',\r\n        borderRadius: 1,\r\n        mr: 1,\r\n        backgroundColor: colors[rating],\r\n        // eslint-disable-next-line no-nested-ternary\r\n        color: index > 0 ? '#999999' : rating < 3 ? 'black' : 'white',\r\n        fontSize: '12px',\r\n        textAlign: 'center',\r\n        fontWeight: rating > 0 ? 500 : 300,\r\n      }}\r\n    >\r\n      {index > 0 ? index : rating}\r\n    </Box>\r\n  );\r\n};\r\n","import { List, ListItemButton, ListItemIcon, ListItemText, Paper, Badge, ListItemSecondaryAction, CircularProgress } from '@mui/material';\r\nimport { AddCircleOutline } from '@mui/icons-material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Taxon } from 'src/database/models/taxon';\r\nimport { db } from 'src/database';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { SpeciesNameFormatted } from './seciesNameFormatted';\r\nimport { EditTick } from './editTick';\r\nimport { RatingIndicator } from './ratingIndicator';\r\n\r\ntype WantedSpeciesListProps = {\r\n  tickListId: number;\r\n  wantedSpeciesList: Taxon[];\r\n};\r\n\r\ninterface RatedTaxon extends Taxon {\r\n  rating: number;\r\n}\r\n\r\nexport const WantedSpeciesList = (props: WantedSpeciesListProps) => {\r\n  const { wantedSpeciesList, tickListId } = props;\r\n  const [expectedSpecies, setExpectedSpecies] = useState<RatedTaxon[]>([]);\r\n\r\n  const expextedTickList = useLiveQuery(() => db.wantedTickList.where('tickListId').equals(tickListId).toArray());\r\n\r\n  useEffect(() => {\r\n    const expectedTaxons: RatedTaxon[] = [];\r\n    if (expextedTickList) {\r\n      if (expextedTickList !== undefined && expextedTickList[0]) {\r\n        wantedSpeciesList.forEach((item) => {\r\n          const exists = expextedTickList[0].ticks.filter((x) => x.taxonId === item.taxonId);\r\n          const newRatedTaxon = { ...item, rating: exists.length ? exists[0].rating : 0 };\r\n          expectedTaxons.push(newRatedTaxon);\r\n        });\r\n        setExpectedSpecies(\r\n          expectedTaxons.sort((a, b) => {\r\n            return a.rating > b.rating ? -1 : 0;\r\n          }),\r\n        );\r\n      } else {\r\n        wantedSpeciesList.forEach((item) => {\r\n          expectedTaxons.push({ ...item, rating: 0 });\r\n        });\r\n        setExpectedSpecies(expectedTaxons);\r\n      }\r\n    }\r\n  }, [expextedTickList]);\r\n\r\n  const [taxonId, setTaxonId] = useState<number | null>(0);\r\n\r\n  const handeCloseTickEdit = useCallback(() => {\r\n    setTaxonId(null);\r\n  }, []);\r\n\r\n  if (!expextedTickList) return null;\r\n\r\n  let nonRatingIndex = 0;\r\n\r\n  return (\r\n    <Paper sx={{ mx: -2 }} square elevation={0}>\r\n      {expextedTickList && (\r\n        <>\r\n          {taxonId !== null && <EditTick tickListId={tickListId} taxonId={taxonId} callback={() => handeCloseTickEdit()} />}\r\n          <List\r\n            disablePadding\r\n            sx={{\r\n              '& li:nth-of-type(even)': { backgroundColor: 'rgba(0,0,0,0.025)' },\r\n              '& .MuiListItemIcon-root': {\r\n                minWidth: '1rem',\r\n              },\r\n              '& .rated': {\r\n                '& .speciesName': {\r\n                  fontWeight: 500,\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {expectedSpecies &&\r\n              expectedSpecies.map((item: RatedTaxon, index: number) => {\r\n                if (item.rating === 0) nonRatingIndex += 1;\r\n                return (\r\n                  <ListItemButton key={item.taxonId} dense divider onClick={() => setTaxonId(item.taxonId)} className={item.rating ? 'rated' : ''}>\r\n                    <RatingIndicator rating={item.rating} index={nonRatingIndex} />\r\n                    <ListItemText primary={<SpeciesNameFormatted name={item.name} rank={item.rank} />} />\r\n                    <ListItemIcon>\r\n                      <AddCircleOutline />\r\n                    </ListItemIcon>\r\n                  </ListItemButton>\r\n                  // <WantedListItem key={item.taxonId} speciesName={<SpeciesNameFormatted name={item.name} rank={item.rank} />} />\r\n                );\r\n              })}\r\n          </List>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n","type TickListTabPanelProps = {\r\n  children: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n};\r\n\r\nexport const TickListTabPanel = (props: TickListTabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div role='tabpanel' hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\r\n      <>{children}</>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable @typescript-eslint/no-use-before-define */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n  onOffline?: () => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA');\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.');\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n      if (config && config.onOffline) {\r\n        config.onOffline();\r\n      }\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport * as serviceWorker from './serviceWorkerRegistration';\r\n\r\nexport const ServiceWorkerWrapper = () => {\r\n  const [showReload, setShowReload] = React.useState(false);\r\n  const [appOffline, setAppOffline] = React.useState(false);\r\n  const [waitingWorker, setWaitingWorker] = React.useState<ServiceWorker | null>(null);\r\n\r\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\r\n    setShowReload(true);\r\n    setWaitingWorker(registration.waiting);\r\n  };\r\n\r\n  const onSuccess = (registration: ServiceWorkerRegistration) => {\r\n    console.log('success', registration);\r\n  };\r\n  const onOffline = () => {\r\n    console.log('app is in offline mode');\r\n    setAppOffline(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    serviceWorker.register({ onUpdate: onSWUpdate, onSuccess, onOffline });\r\n  }, []);\r\n\r\n  const reloadPage = () => {\r\n    waitingWorker?.postMessage({ type: 'SKIP_WAITING' });\r\n    setShowReload(false);\r\n    const form = document.createElement('form');\r\n    form.method = 'POST';\r\n    form.action = window.location.href;\r\n    document.body.appendChild(form);\r\n    form.submit();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>{appOffline && <h1>App is working in offline mode!</h1>}</div>\r\n      <div>\r\n        {showReload && (\r\n          <>\r\n            <span>Det finne en ny version av Xá! Tryck på knappen för att uppdatera</span>\r\n            <button type='button' onClick={reloadPage}>\r\n              Uppdatera\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport taxaList from 'src/database/data/taxaList.json';\r\nimport ConsoleHelper from 'src/shared/helpers/consoleHelper';\r\nimport { db } from 'src/database/index';\r\n\r\nexport const InitDatabase = () => {\r\n  const taxonCount = useLiveQuery(() => db.taxon.count());\r\n\r\n  useEffect(() => {\r\n    if (taxonCount !== undefined && taxonCount === 0) {\r\n      db.taxon.bulkPut(taxaList).then((lastKey) => {\r\n        ConsoleHelper.log(`Taxon list success, last id was: ${lastKey}`);\r\n      });\r\n    }\r\n  }, [taxonCount]);\r\n\r\n  return null;\r\n};\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    // background: {\r\n    //   default: 'rgb(245, 245, 245)',\r\n    // },\r\n    primary: {\r\n      main: '#305f78',\r\n    },\r\n    secondary: {\r\n      main: '#d84315',\r\n    },\r\n    background: {\r\n      default: '#ecefec',\r\n    },\r\n  },\r\n\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: {\r\n        body: {\r\n          '& th.rotate': {\r\n            /* Something you can count on */\r\n            height: '100px',\r\n            whiteSpace: 'nowrap',\r\n            '& > div': {\r\n              /* Magic Numbers - 45 is really 360 - 45  */\r\n              transform: `translate(7px, 36px) rotate(315deg)`,\r\n              width: '10px',\r\n              '& > span': {\r\n                borderBottom: '1px solid #ccc',\r\n                padding: '3px',\r\n                fontSize: '0.7rem',\r\n              },\r\n            },\r\n          },\r\n        },\r\n        '& span.speciesName': {\r\n          fontSize: '1rem',\r\n          lineHeight: 1,\r\n          letterSpacing: '0.00938em',\r\n          color: 'inherit',\r\n          fontWeight: 300,\r\n          '&.bold': {\r\n            fontWeight: 500,\r\n          },\r\n          '&.red': {\r\n            color: 'red',\r\n          },\r\n        },\r\n        scrollbarColor: 'red blue',\r\n        '&::-webkit-scrollbar, & *::-webkit-scrollbar': {\r\n          backgroundColor: 'transparent',\r\n          width: '8px',\r\n        },\r\n        '&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb': {\r\n          borderRadius: 8,\r\n          backgroundColor: 'rgba(0, 0 ,0 , 0.3)',\r\n          minHeight: 24,\r\n          width: '8px',\r\n        },\r\n        '&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus': {\r\n          backgroundColor: 'rgba(0, 0 ,0 , 0.5)',\r\n        },\r\n        '&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active': {\r\n          backgroundColor: 'rgba(0, 0 ,0 , 0.5)',\r\n        },\r\n        '&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover': {\r\n          backgroundColor: 'rgba(0, 0 ,0 , 0.5)',\r\n        },\r\n        '&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner': {\r\n          backgroundColor: 'transparent',\r\n        },\r\n        '& .MuiBackdrop-root': {\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport Slide from '@mui/material/Slide';\r\n\r\ntype Props = {\r\n  window: () => Window;\r\n  children: React.ReactElement;\r\n};\r\n\r\nexport const HideOnScroll = (props: Props) => {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return (\r\n    <Slide appear={false} direction='down' in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/xa-logo.ff83899f.png\";","import Logo from 'src/assets/images/xa-logo.png';\r\n\r\nexport const LogoImage = () => {\r\n  return <img src={Logo} alt='Xá' style={{ maxHeight: '1.5rem', width: 'auto' }} />;\r\n};\r\n","import { AppBar, Toolbar, IconButton, Typography, Divider, Box, Badge } from '@mui/material';\r\nimport { Apps, Star, Bookmarks, ListOutlined } from '@mui/icons-material';\r\nimport { Link } from 'react-router-dom';\r\nimport { RoutesEnum } from 'src/shared/enums/routes.enum';\r\nimport { useContext } from 'react';\r\nimport { GameContext } from 'src/shared/state/context';\r\nimport { toogleListDrawer } from 'src/shared/state/reducer';\r\nimport { HideOnScroll } from 'src/shared/components/organisms/hideOnScroll';\r\nimport { LogoImage } from 'src/shared/components/atoms/logoImage';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { db } from 'src/database';\r\n\r\nexport const TickListHeader = (props: any) => {\r\n  const { state, dispatch } = useContext(GameContext);\r\n\r\n  const allLists = useLiveQuery(() => db.tickList.toArray());\r\n\r\n  const showListDrawer = () => {\r\n    dispatch(toogleListDrawer());\r\n  };\r\n  return (\r\n    <>\r\n      <HideOnScroll {...props}>\r\n        <AppBar sx={{ borderBottomWidth: '2px', borderBottomStyle: 'solid', borderBottomColor: 'secondary.main' }}>\r\n          <Toolbar>\r\n            {/* <IconButton\r\n              size='large'\r\n              edge='start'\r\n              color='inherit'\r\n              aria-label='menu'\r\n              sx={{\r\n                mr: 2,\r\n              }}\r\n              onClick={() => showListDrawer()}\r\n            >\r\n              <Menu />\r\n            </IconButton> */}\r\n            <Box\r\n              sx={{ display: 'flex', alignItems: 'center', flexGrow: 1, color: 'white', textDecoration: 'none', mr: 3 }}\r\n              component={Link}\r\n              to={RoutesEnum.Default}\r\n            >\r\n              <Box sx={{ pr: 1, mr: 1, borderRight: '1px solid rgba(255,255,255,0.3)', display: 'flex' }}>\r\n                <LogoImage />\r\n              </Box>\r\n              <Typography variant='h6' component='div' sx={{ flexGrow: 1, fontWeight: 100 }}>\r\n                Kryssa\r\n              </Typography>\r\n            </Box>\r\n            <div>\r\n              <IconButton size='large' color='inherit' component={Link} to={RoutesEnum.ListOverview}>\r\n                <Badge badgeContent={allLists?.length} color='secondary'>\r\n                  <Apps />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton size='large' color='inherit' component={Link} to={RoutesEnum.ListFavourites}>\r\n                <Badge badgeContent={allLists?.filter((x) => x.favourite).length} color='secondary'>\r\n                  <Star />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton size='large' color='inherit' component={Link} to={RoutesEnum.Tags}>\r\n                <Bookmarks />\r\n              </IconButton>\r\n              {/* <IconButton size='large' color='inherit' component={Link} to={RoutesEnum.ListImport}>\r\n                <PostAdd />\r\n              </IconButton> */}\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar id='back-to-top-anchor' />\r\n    </>\r\n  );\r\n};\r\n","import { Collapse, Drawer, List, ListItem, ListItemButton, ListItemIcon, ListItemText, ListSubheader, Typography } from '@mui/material';\r\nimport { ExpandMore, ExpandLess } from '@mui/icons-material';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { db } from 'src/database';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { Link } from 'react-router-dom';\r\nimport { GameContext } from 'src/shared/state/context';\r\nimport { toogleListDrawer } from 'src/shared/state/reducer';\r\n\r\nexport const ListDrawer = () => {\r\n  const { state, dispatch } = useContext(GameContext);\r\n  const [tickLists, setTickLists] = useState<TickList[]>([]);\r\n\r\n  const fetchData = async () => {\r\n    await db.transaction('r', [db.tickList], async () => {\r\n      const dbResult = await db.tickList.toArray();\r\n      // .where('firstName').startsWithAnyOfIgnoreCase('a', 'b', 'c').sortBy('id');\r\n      setTickLists(dbResult);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const toggleDrawer = () => {\r\n    dispatch(toogleListDrawer());\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor='top' open={state.listDrawerVisible} onClose={() => toggleDrawer()}>\r\n      <List\r\n        disablePadding\r\n        sx={{ width: '100%', bgcolor: 'background.paper' }}\r\n        component='nav'\r\n        aria-labelledby='nested-list-subheader'\r\n        subheader={\r\n          <ListSubheader component='div' id='nested-list-subheader'>\r\n            Nested List Items\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        <ListItemButton onClick={handleClick}>\r\n          <ListItemText\r\n            primary={\r\n              <>\r\n                <Typography variant='h6' component='span' sx={{ fontWeight: 600 }}>\r\n                  Kommun\r\n                </Typography>\r\n                <Typography component='span' sx={{ ml: 1 }}>\r\n                  (1)\r\n                </Typography>\r\n              </>\r\n            }\r\n          />\r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItemButton>\r\n        <Collapse in={open} timeout='auto' unmountOnExit>\r\n          <List component='div' disablePadding>\r\n            {tickLists &&\r\n              tickLists.map((item) => {\r\n                return (\r\n                  <ListItem\r\n                    sx={{\r\n                      pl: 4,\r\n                    }}\r\n                    key={item.id}\r\n                    secondaryAction={item.tickCount}\r\n                    onClick={() => toggleDrawer()}\r\n                    component={Link}\r\n                    to={`/list/${item.id}`}\r\n                  >\r\n                    <ListItemText primary={item.listName} />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Fab from '@mui/material/Fab';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport Zoom from '@mui/material/Zoom';\r\n\r\nexport const ScrollToTop = () => {\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'center',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <Box onClick={handleClick} role='presentation' sx={{ position: 'fixed', bottom: 16, right: 16 }}>\r\n        <Fab color='primary' size='small' aria-label='scroll back to top'>\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </Box>\r\n    </Zoom>\r\n  );\r\n};\r\n","import { Box, Container } from '@mui/material';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { ServiceWorkerWrapper } from 'src/serviceWorkerWrapper';\r\nimport { InitDatabase } from 'src/shared/components/organisms/initDatabase';\r\nimport { theme } from 'src/shared/components/styles/theme';\r\nimport { LayoutPageProperties } from 'src/shared/models/layoutPageProperties';\r\nimport { TickListHeader } from '../components/organisms/tickListHeader';\r\nimport { ListDrawer } from '../components/organisms/listDrawer';\r\nimport { ScrollToTop } from '../components/atoms/scrollToTop';\r\n\r\nconst ListTemplate = ({ Component, route }: LayoutPageProperties) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <ServiceWorkerWrapper />\r\n      <TickListHeader />\r\n      <ListDrawer />\r\n      <InitDatabase />\r\n      <Box component='main'>\r\n        <Container sx={{ mt: 2 }}>\r\n          <Component route={route} />\r\n        </Container>\r\n        <ScrollToTop />\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ListTemplate;\r\n","import { ListAlt, Star } from '@mui/icons-material';\r\nimport { List, ListItem, Typography, ListItemIcon, ListItemText } from '@mui/material';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { db } from 'src/database';\r\nimport { TickList } from 'src/database/models/tickList';\r\n\r\ntype TagListOverviewProps = {\r\n  tagId: number;\r\n};\r\n\r\nexport const TagListOverview = (props: TagListOverviewProps) => {\r\n  const { tagId } = props;\r\n\r\n  const [tickLists, setTickLists] = useState<TickList[]>([]);\r\n\r\n  const currentTagLists = useLiveQuery(() => db.tagLists.where('tagId').equals(tagId).toArray());\r\n  const allLists = useLiveQuery(() => db.tickList.toArray());\r\n\r\n  useEffect(() => {\r\n    if (allLists && currentTagLists) {\r\n      const lists = allLists.filter((x) => currentTagLists.some((list) => list.tickListId === x.id));\r\n      setTickLists(lists);\r\n    }\r\n  }, [allLists, currentTagLists]);\r\n\r\n  return (\r\n    <List\r\n      component='div'\r\n      disablePadding\r\n      sx={{\r\n        borderTopWidth: 1,\r\n        borderTopStyle: 'solid',\r\n        borderTopColor: 'divider',\r\n        '& .MuiListItemIcon-root': {\r\n          minWidth: '2rem',\r\n        },\r\n        '& a': {\r\n          color: 'text.primary',\r\n        },\r\n      }}\r\n    >\r\n      {tickLists\r\n        .sort((a, b) => {\r\n          return a.tickCount > b.tickCount ? 1 : -1;\r\n        })\r\n        .map((item: TickList, index: number) => {\r\n          return (\r\n            <ListItem\r\n              key={item.id}\r\n              secondaryAction={\r\n                <Typography\r\n                  component='span'\r\n                  variant='body2'\r\n                  sx={{\r\n                    borderRadius: 1,\r\n                    backgroundColor: 'secondary.main',\r\n                    color: 'white',\r\n                    px: 0.8,\r\n                    py: 0.3,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  {item.tickCount}\r\n                </Typography>\r\n              }\r\n              component={Link}\r\n              to={`/list/${item.id}`}\r\n              divider={index !== tickLists.length - 1}\r\n              dense\r\n            >\r\n              <ListItemIcon>\r\n                <ListAlt />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <>\r\n                    {item.listName} {item.year}\r\n                    {item.favourite ? (\r\n                      <Star\r\n                        fontSize='small'\r\n                        sx={{\r\n                          ml: '5px',\r\n                          mt: '2px',\r\n                          fontSize: '14px',\r\n                          verticalAlign: 'baseline',\r\n                        }}\r\n                      />\r\n                    ) : null}\r\n                  </>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n    </List>\r\n  );\r\n};\r\n","import { Box, List, ListItem, ListItemButton, ListItemText, Typography } from '@mui/material';\r\nimport { Dexie } from 'dexie';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport { db } from 'src/database';\r\nimport { Taxon } from 'src/database/models/taxon';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { WantedTickList } from 'src/database/models/wantedTickList';\r\nimport { RatingIndicator } from './ratingIndicator';\r\nimport { SpeciesNameFormatted } from './seciesNameFormatted';\r\n\r\ntype TagListWantedProps = {\r\n  tagId: number;\r\n};\r\n\r\ninterface RatedTaxon extends Taxon {\r\n  rating: number;\r\n}\r\n\r\ninterface Wanted {\r\n  wanted: WantedTickList[];\r\n  tickList: TickList[];\r\n  ratedTaxa: RatedTaxon[];\r\n}\r\n\r\nexport const TagListWanted = (props: TagListWantedProps) => {\r\n  const { tagId } = props;\r\n\r\n  const [tickLists, setTickLists] = useState<Wanted[]>([]);\r\n  const [listForRender, setListForRender] = useState<Wanted[]>([]);\r\n\r\n  const allTaxa = useLiveQuery(() => db.taxon.toArray());\r\n\r\n  const { all } = Dexie.Promise;\r\n\r\n  const joinLists = (listCollection: any) => {\r\n    // Start by getting all bands as an array of band objects\r\n    return listCollection.toArray((bands: any) => {\r\n      // Query related properties:\r\n      const genresPromises = bands.map((band: any) => {\r\n        return db.wantedTickList.where('id').anyOf(band.tickListId).toArray();\r\n      });\r\n      const albumsPromises = bands.map((band: any) => {\r\n        return db.tickList.where('id').anyOf(band.tickListId).toArray();\r\n      });\r\n\r\n      // Await genres and albums queries:\r\n      return all([all(genresPromises), all(albumsPromises)]).then(function (genresAndAlbums) {\r\n        // Now we have all foreign keys resolved and\r\n        // we can put the results onto the bands array\r\n        // before returning it:\r\n        const result: Wanted[] = [];\r\n        bands.forEach(function (band: any, i: number) {\r\n          result.push({\r\n            wanted: genresAndAlbums[0][i],\r\n            tickList: genresAndAlbums[1][i],\r\n          } as Wanted);\r\n        });\r\n        return result;\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('kom?!');\r\n\r\n    joinLists(db.tagLists.where('tagId').equals(tagId))\r\n      .then((wantedLists: Wanted[]) => {\r\n        setTickLists(wantedLists);\r\n        // wantedLists.forEach((item: Wanted) => {\r\n        //   console.log(`Listanme: ${item.tickList[0].listName}`);\r\n        // });\r\n      })\r\n      .catch((error: any) => {\r\n        console.log(`Oops: ${error}`);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (allTaxa && tickLists) {\r\n      const tempResult: Wanted[] = [];\r\n      tickLists.forEach((item: Wanted) => {\r\n        console.log('item.wanted[0]', item.wanted[0]);\r\n        tempResult.push({\r\n          wanted: item.wanted,\r\n          tickList: item.tickList,\r\n          ratedTaxa:\r\n            (item.wanted[0] &&\r\n              item.wanted[0].ticks.map((x) => {\r\n                return { ...allTaxa.filter((z) => z.taxonId === x.taxonId)[0], rating: x.rating } as RatedTaxon;\r\n              })) ??\r\n            [],\r\n        } as unknown as Wanted);\r\n      });\r\n      console.log(tempResult);\r\n      setListForRender(tempResult);\r\n    }\r\n  }, [allTaxa, tickLists]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        borderTopWidth: 1,\r\n        borderTopStyle: 'solid',\r\n        borderTopColor: 'divider',\r\n      }}\r\n    >\r\n      {listForRender &&\r\n        listForRender.map((item: Wanted) => {\r\n          return (\r\n            <List dense sx={{ p: 0 }}>\r\n              <ListItem\r\n                divider\r\n                sx={{ borderBottomWidth: '3px' }}\r\n                secondaryAction={\r\n                  <Typography\r\n                    component='span'\r\n                    variant='body2'\r\n                    sx={{\r\n                      borderRadius: 1,\r\n                      backgroundColor: 'secondary.main',\r\n                      color: 'white',\r\n                      px: 0.8,\r\n                      py: 0.3,\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    {item.tickList[0]?.tickCount}\r\n                  </Typography>\r\n                }\r\n              >\r\n                <Typography variant='h6' key={item.tickList[0]?.id}>\r\n                  {item.tickList[0]?.listName}\r\n                </Typography>\r\n              </ListItem>\r\n              {!item.ratedTaxa.length && (\r\n                <ListItem>\r\n                  <Typography variant='body2'>\r\n                    <em>Förväntade arter har inte valts</em>\r\n                  </Typography>\r\n                </ListItem>\r\n              )}\r\n              {item.ratedTaxa\r\n                .sort((a, b) => {\r\n                  return a.rating > b.rating ? -1 : 0;\r\n                })\r\n                .map((taxa: RatedTaxon) => (\r\n                  <ListItemButton key={taxa.taxonId} dense divider className={taxa.rating ? 'rated' : ''}>\r\n                    <RatingIndicator rating={taxa.rating} index={0} />\r\n                    <ListItemText primary={<SpeciesNameFormatted name={taxa.name} rank={taxa.rank} />} />\r\n                  </ListItemButton>\r\n                ))}\r\n            </List>\r\n          );\r\n        })}\r\n    </Box>\r\n  );\r\n};\r\n","import { ExpandMore, Delete } from '@mui/icons-material';\r\nimport { Button, ListItemIcon, Menu, MenuItem } from '@mui/material';\r\nimport { db } from 'src/database';\r\nimport React, { useContext } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { DeleteConfirmationDialog } from 'src/shared/components/organisms/deleteConfirmationDialog';\r\nimport { setActiveTagId } from 'src/shared/state/reducer';\r\nimport { GameContext } from 'src/shared/state/context';\r\n\r\ntype TagsActionMenuProps = {\r\n  tagId: number;\r\n};\r\n\r\nexport const TagsActionMenu = (props: TagsActionMenuProps) => {\r\n  const { tagId } = props;\r\n  const { state, dispatch } = useContext(GameContext);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  console.log('tagId', tagId);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [deleteId, setDeleteId] = React.useState<string | null>(null);\r\n\r\n  const showDeleteConfirmationDialog = () => {\r\n    setDeleteId(`${tagId}`);\r\n  };\r\n\r\n  const handleCloseDialog = async (newValue: any) => {\r\n    setDeleteId(null);\r\n\r\n    if (newValue) {\r\n      toast.success('Taggen raderades');\r\n      console.log(newValue, 'taggen', tagId);\r\n      await db.tags\r\n        .where('id')\r\n        .equals(+tagId)\r\n        .delete()\r\n        .then(function (deleteCount) {\r\n          console.log(`Deleted ${deleteCount} objects`);\r\n        });\r\n      await db.tagLists\r\n        .where('tagId')\r\n        .equals(+tagId)\r\n        .delete();\r\n      dispatch(setActiveTagId(null));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteConfirmationDialog\r\n        title='Vill du radera taggen?'\r\n        modaltext='Listorna finns kvar...'\r\n        open={!!deleteId}\r\n        onClose={handleCloseDialog}\r\n        value={deleteId}\r\n      />\r\n      <Button\r\n        variant='outlined'\r\n        color='primary'\r\n        size='small'\r\n        sx={{\r\n          padding: 0,\r\n          minWidth: '2rem',\r\n          height: '2rem',\r\n          lineHeight: 1,\r\n          color: 'text.secondary',\r\n          borderColor: '#ccc',\r\n        }}\r\n        id='basic-button'\r\n        aria-controls='basic-menu'\r\n        aria-haspopup='true'\r\n        aria-expanded={open ? 'true' : undefined}\r\n        onClick={handleClick}\r\n      >\r\n        <ExpandMore />\r\n      </Button>\r\n      <Menu\r\n        id='basic-menu'\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        {/* <MenuItem onClick={() => showEditTagDialog()}>\r\n          <ListItemIcon>\r\n            <Edit fontSize='small' />\r\n          </ListItemIcon>\r\n          Redigera tagg\r\n        </MenuItem> */}\r\n        <MenuItem onClick={() => showDeleteConfirmationDialog()}>\r\n          <ListItemIcon>\r\n            <Delete fontSize='small' />\r\n          </ListItemIcon>\r\n          Radera taggen\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n","import { Box, Chip, Typography, Paper, Badge } from '@mui/material';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { db } from 'src/database';\r\nimport { Tag } from 'src/database/models/tag';\r\nimport { GameContext } from 'src/shared/state/context';\r\nimport { setActiveTagId } from 'src/shared/state/reducer';\r\nimport { TagListOverview } from './tagListOverview';\r\nimport { TagListWanted } from './tagListWanted';\r\nimport { TagsActionMenu } from './tagsActionMenu';\r\nimport { TickListTabPanel } from './tickListTabPanel';\r\nimport { TickListTabs } from './tickListTabs';\r\n\r\nexport const TagActiveView = () => {\r\n  const { state, dispatch } = useContext(GameContext);\r\n\r\n  const [activeTab, setActiveTab] = useState(0);\r\n\r\n  const handleTabChange = useCallback((newValue: number) => {\r\n    setActiveTab(newValue);\r\n  }, []);\r\n\r\n  const [activeTag, setActiveTag] = useState<Tag | null>(null);\r\n  const [tags, setTags] = useState<Tag[]>([]);\r\n\r\n  const allTags = useLiveQuery(() => db.tags.toArray());\r\n  useEffect(() => {\r\n    if (allTags !== undefined) {\r\n      setTags(allTags);\r\n      const findTag = allTags.filter((x) => x.id === state.activeTagId);\r\n      if (findTag.length) {\r\n        setActiveTag(findTag[0]);\r\n      }\r\n    }\r\n  }, [allTags]);\r\n\r\n  const resetActiveTag = () => {\r\n    dispatch(setActiveTagId(null));\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      elevation={0}\r\n      square\r\n      sx={{\r\n        mx: -2,\r\n        // backgroundColor: activeTag?.color,\r\n        // background: `linear-gradient(0deg, #ffffff 0%, ${activeTag?.color} 100%)`,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          pt: 4,\r\n          px: 2,\r\n          pb: 2,\r\n          mt: -3,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Chip\r\n          label={\r\n            <Typography variant='h5' sx={{ display: 'flex', alignItems: 'center' }}>\r\n              <Box\r\n                sx={{\r\n                  width: '1.2rem',\r\n                  height: '1.2rem',\r\n                  borderRadius: 1,\r\n                  mr: 1,\r\n                  backgroundColor: activeTag?.color,\r\n                }}\r\n              />\r\n              {activeTag?.name}\r\n            </Typography>\r\n          }\r\n          sx={{\r\n            height: '2.3rem',\r\n            borderRadius: 1,\r\n          }}\r\n          variant='outlined'\r\n          onDelete={resetActiveTag}\r\n        />\r\n        {activeTag && <TagsActionMenu tagId={activeTag.id} />}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          borderBottom: 1,\r\n          borderColor: 'divider',\r\n        }}\r\n      >\r\n        <TickListTabs\r\n          tabItems={[\r\n            {\r\n              id: 0,\r\n              label: 'Listor',\r\n            },\r\n            {\r\n              id: 1,\r\n              label: 'Förväntade',\r\n            },\r\n          ]}\r\n          callback={handleTabChange}\r\n        />\r\n        <TickListTabPanel value={activeTab} index={0}>\r\n          {activeTab === 0 && activeTag && <TagListOverview tagId={activeTag.id} />}\r\n        </TickListTabPanel>\r\n        <TickListTabPanel value={activeTab} index={1}>\r\n          {activeTab === 1 && activeTag && <TagListWanted tagId={activeTag.id} />}\r\n        </TickListTabPanel>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n","import { Box, Button, Typography } from '@mui/material';\r\nimport { CheckOutlined } from '@mui/icons-material';\r\nimport { useState } from 'react';\r\n\r\ntype TagColorPickerProps = {\r\n  callback: (color: string) => void;\r\n  color: string;\r\n};\r\n\r\nconst MuiColors = ['#f44336', '#e91e63', '#9c27b0', '#673ab7'];\r\n\r\nexport const TagColorPicker = (props: TagColorPickerProps) => {\r\n  const { callback, color } = props;\r\n  const [activeColor, setActiveColor] = useState<string>(color);\r\n\r\n  const changeActiveColor = (newColor: string) => {\r\n    setActiveColor(newColor);\r\n    callback(newColor);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='caption'>Välj färg</Typography>\r\n      <Box\r\n        sx={{\r\n          mb: 2,\r\n          display: 'grid',\r\n          gridTemplateColumns: 'repeat(4, 1fr)',\r\n          gridTemplateRows: '2rem',\r\n          gridGap: '1px',\r\n          '& .MuiButton-root': {\r\n            minWidth: 'auto',\r\n          },\r\n        }}\r\n      >\r\n        {MuiColors.map((item) => {\r\n          return (\r\n            <Button\r\n              key={item}\r\n              sx={{\r\n                color: 'white',\r\n                backgroundColor: `${item} !important`,\r\n                borderRadius: 0,\r\n              }}\r\n              disableElevation\r\n              onClick={() => changeActiveColor(item)}\r\n            >\r\n              {item === activeColor && <CheckOutlined />}\r\n            </Button>\r\n          );\r\n        })}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import { Paper, Grid, Button, TextField } from '@mui/material';\r\nimport { useState, useCallback } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { db } from 'src/database';\r\nimport { Tag } from 'src/database/models/tag';\r\nimport { TagColorPicker } from './tagColorPicker';\r\n\r\ntype TagCreateFormProps = {\r\n  callback: () => void;\r\n  tag?: Tag | null;\r\n};\r\n\r\nexport const TagCreateForm = (props: TagCreateFormProps) => {\r\n  const { callback, tag } = props;\r\n  const [currentTag, setCurrentTag] = useState<Tag>(tag ?? ({ name: '', color: '' } as unknown as Tag));\r\n  const changeTagName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrentTag((prev) => ({ ...prev, name: event.target.value as string }));\r\n  };\r\n\r\n  const changeTagColor = useCallback((newColor: string) => {\r\n    setCurrentTag((prev) => ({ ...prev, color: newColor }));\r\n  }, []);\r\n\r\n  const handleCancel = () => {\r\n    callback();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (currentTag.id) {\r\n      db.tags\r\n        .update(currentTag.id, {\r\n          name: currentTag.name,\r\n          color: currentTag.color,\r\n        })\r\n        .then(() => {\r\n          toast.success('Taggen uppdaterades');\r\n          callback();\r\n        });\r\n    } else {\r\n      db.tags\r\n        .add({\r\n          name: currentTag.name,\r\n          color: currentTag.color,\r\n        } as unknown as Tag)\r\n        .then(() => {\r\n          toast.success('Taggen sparades');\r\n          callback();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, mt: 2 }}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <TextField fullWidth label='Taggnamn' variant='outlined' size='small' value={currentTag.name} onChange={changeTagName} sx={{ mb: 2 }} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TagColorPicker callback={changeTagColor} color={currentTag.color} />\r\n        </Grid>\r\n        <Grid item xs={12} textAlign='right'>\r\n          <Button autoFocus onClick={handleCancel} color='primary' sx={{ mr: 2 }}>\r\n            Avbryt\r\n          </Button>\r\n          <Button onClick={handleOk} color='primary' variant='contained'>\r\n            Spara\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nTagCreateForm.defaultProps = {\r\n  tag: null,\r\n};\r\n","import { AddCircle, InfoOutlined } from '@mui/icons-material';\r\nimport { Button, Paper, Chip, Typography } from '@mui/material';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useState, useCallback, useEffect, useContext } from 'react';\r\nimport { db } from 'src/database';\r\nimport { Tag } from 'src/database/models/tag';\r\nimport { GameContext } from 'src/shared/state/context';\r\nimport { setActiveTagId } from 'src/shared/state/reducer';\r\nimport { TagCreateForm } from './tagCreateForm';\r\n\r\nexport const TagEdit = () => {\r\n  const { state, dispatch } = useContext(GameContext);\r\n  const [showAddTagForm, setShowAddTagForm] = useState<boolean>(false);\r\n  const toggleAddTagForm = useCallback(() => {\r\n    console.log('here');\r\n    setShowAddTagForm(false);\r\n  }, []);\r\n\r\n  const [tags, setTags] = useState<Tag[]>([]);\r\n\r\n  const allTags = useLiveQuery(() => db.tags.toArray());\r\n  useEffect(() => {\r\n    if (allTags !== undefined) {\r\n      setTags(allTags);\r\n    }\r\n  }, [allTags]);\r\n\r\n  const changeActiveTag = (newActiveTagId: number) => {\r\n    dispatch(setActiveTagId(newActiveTagId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showAddTagForm && <TagCreateForm callback={toggleAddTagForm} tag={null} />}\r\n      {!showAddTagForm && (\r\n        <>\r\n          <Paper sx={{ p: !tags.length ? 0 : 2 }}>\r\n            {tags &&\r\n              tags.map((item: Tag) => (\r\n                <Chip\r\n                  label={item.name}\r\n                  key={item.id}\r\n                  sx={{\r\n                    backgroundColor: item.color,\r\n                    mr: 0.5,\r\n                    mb: 0.5,\r\n                    color: 'white',\r\n                    fontWeight: 600,\r\n                  }}\r\n                  onClick={() => changeActiveTag(item.id)}\r\n                />\r\n              ))}\r\n            {!tags.length && (\r\n              <Typography variant='h6' sx={{ py: 1, px: 2, display: 'flex', alignItems: 'center' }}>\r\n                <InfoOutlined fontSize='small' sx={{ color: 'text.disabled', mr: 1 }} />\r\n                Taggar saknas\r\n              </Typography>\r\n            )}\r\n          </Paper>\r\n          <Button\r\n            size='large'\r\n            color='primary'\r\n            variant='contained'\r\n            sx={{\r\n              mt: 2,\r\n              width: '100%',\r\n            }}\r\n            onClick={() => setShowAddTagForm(true)}\r\n            startIcon={<AddCircle />}\r\n          >\r\n            Skapa ny tagg\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { RoutesEnum, RouteTypeEnum } from 'src/shared/enums/routes.enum';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { PageNotfound } from 'src/modules/notfound/pages/notfoundPage';\r\nimport { StartPage } from 'src/modules/start/pages/startPage';\r\nimport { ListOverviewPage } from 'src/modules/lists/pages/overview';\r\nimport { ImportListPage } from 'src/modules/lists/pages/importList';\r\nimport { ViewTickListPage } from 'src/modules/lists/pages/viewTickList';\r\nimport { AppTemplate, PageTemplate, ListTemplate } from 'src/shared/templates';\r\nimport { PageProperties, RouteProperties, LayoutPageProperties } from 'src/shared/models/layoutPageProperties';\r\nimport { FavouritesPage } from 'src/modules/lists/pages/listFavourites';\r\nimport { TagsPage } from 'src/modules/lists/pages/tagsPage';\r\n\r\nconst routes: RouteProperties[] = [\r\n  {\r\n    exact: true,\r\n    path: RoutesEnum.Default,\r\n    template: ListTemplate,\r\n    component: ListOverviewPage,\r\n  },\r\n  // {\r\n  //   exact: true,\r\n  //   path: RoutesEnum.Start,\r\n  //   template: AppTemplate,\r\n  //   component: StartPage,\r\n  // },\r\n  {\r\n    exact: true,\r\n    path: RoutesEnum.ListFavourites,\r\n    template: ListTemplate,\r\n    component: FavouritesPage,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: RoutesEnum.ListOverview,\r\n    template: ListTemplate,\r\n    component: ListOverviewPage,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: RoutesEnum.ListImport,\r\n    template: ListTemplate,\r\n    component: ImportListPage,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: RoutesEnum.ListDetail,\r\n    template: ListTemplate,\r\n    component: ViewTickListPage,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: RoutesEnum.Tags,\r\n    template: ListTemplate,\r\n    component: TagsPage,\r\n  },\r\n];\r\n\r\nexport const PageRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      {routes.map((routeItem: RouteProperties) => {\r\n        return (\r\n          <Route\r\n            exact={routeItem.exact}\r\n            path={routeItem.path}\r\n            key={routeItem.path}\r\n            render={(route) => <routeItem.template Component={routeItem.component} route={route} />}\r\n          />\r\n        );\r\n      })}\r\n      {/* \r\n      <Route path={RoutesEnum.Start} exact component={StartPage} />\r\n      <Route path={RoutesEnum.Document} exact component={DocumentPage} />\r\n      */}\r\n      <Route component={PageNotfound} />\r\n    </Switch>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { db } from 'src/database';\r\nimport { ListAlt, Star } from '@mui/icons-material';\r\nimport { Paper, Typography, Divider, List, ListItem, ListItemIcon, ListItemText, ListSubheader, alpha } from '@mui/material';\r\n\r\nexport const FavouritesPage = () => {\r\n  const [favouriteTickLists, setFavouriteTickLists] = useState<TickList[]>([]);\r\n  const allLists = useLiveQuery(() => db.tickList.toArray());\r\n\r\n  useEffect(() => {\r\n    if (allLists !== undefined) {\r\n      setFavouriteTickLists(\r\n        allLists\r\n          .filter((item) => item.favourite)\r\n          .sort((a, b) => {\r\n            return a.listName > b.listName ? 1 : -1;\r\n          }),\r\n      );\r\n    }\r\n  }, [allLists]);\r\n\r\n  return (\r\n    <>\r\n      {favouriteTickLists && (\r\n        <Paper\r\n          sx={{\r\n            mb: 2,\r\n            '& .MuiListItemIcon-root': {\r\n              minWidth: '2rem',\r\n            },\r\n            '& a': {\r\n              color: 'text.primary',\r\n              '&:hover': {\r\n                backgroundColor: (theme) => alpha(theme.palette.primary.light, 0.1),\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Typography variant='h6' sx={{ py: 1, px: 2, display: 'flex', alignItems: 'center' }}>\r\n            <Star fontSize='small' sx={{ color: 'text.disabled', mr: 1 }} />\r\n            Favoriter ({favouriteTickLists.length})\r\n          </Typography>\r\n          <Divider />\r\n          <List component='div' disablePadding>\r\n            {favouriteTickLists.map((item: TickList, index: number) => {\r\n              return (\r\n                <ListItem\r\n                  key={item.id}\r\n                  secondaryAction={\r\n                    <Typography\r\n                      component='span'\r\n                      variant='body2'\r\n                      sx={{\r\n                        borderRadius: 1,\r\n                        backgroundColor: 'secondary.main',\r\n                        color: 'white',\r\n                        px: 0.8,\r\n                        py: 0.3,\r\n                        fontWeight: 500,\r\n                      }}\r\n                    >\r\n                      {item.tickCount}\r\n                    </Typography>\r\n                  }\r\n                  component={Link}\r\n                  to={`/list/${item.id}`}\r\n                  divider\r\n                  dense\r\n                >\r\n                  <ListItemIcon>\r\n                    <ListAlt />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <>\r\n                        {item.listName} {item.year}\r\n                        {/* {item.favourite ? <Star fontSize='small' sx={{ ml: 1, fontSize: '14px' }} /> : null} */}\r\n                      </>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { db } from 'src/database';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { Box, Button, Grid, Paper, TextField, Typography } from '@mui/material';\r\nimport { CloudUpload, DownloadingOutlined } from '@mui/icons-material';\r\nimport { toast } from 'react-toastify';\r\nimport { CopyInstructions } from '../components/copyInstructions';\r\n\r\nexport const ImportListPage = () => {\r\n  const [listData, setListData] = useState<string>('');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setListData(event.target.value);\r\n  };\r\n\r\n  const parseListData = async () => {\r\n    const json = JSON.parse(listData);\r\n    const year = Object.prototype.hasOwnProperty.call(json, 'year') ? json.year : null;\r\n    const tickList = {\r\n      listName: json.areaName,\r\n      listType: json.type,\r\n      year,\r\n      ticks: json.speciesList,\r\n      tickCount: json.speciesList.length,\r\n      updated: new Date(),\r\n      created: new Date(),\r\n      imported: true,\r\n      favourite: false,\r\n      apUrl: json.apUrl,\r\n    } as unknown as TickList;\r\n\r\n    await db.transaction('rw', db.tickList, async function () {\r\n      const result = await db.tickList.add(tickList);\r\n      toast.success('Listan importerades');\r\n      setListData('');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CopyInstructions />\r\n      <Paper sx={{ p: 2 }}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex' }}>\r\n              <DownloadingOutlined fontSize='small' sx={{ color: 'text.disabled', mr: 1, mt: '1px' }} />\r\n              <Typography sx={{ fontWeight: 500, mb: 3 }}>Importa en lista från Artportalen</Typography>\r\n            </Box>\r\n            <TextField\r\n              sx={{ mb: 1 }}\r\n              fullWidth\r\n              multiline\r\n              label='Importera lista'\r\n              value={listData}\r\n              placeholder='Klistra in listdata'\r\n              onChange={handleChange}\r\n              InputLabelProps={{ shrink: true }}\r\n              rows={7}\r\n              autoFocus\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} textAlign='right'>\r\n            <Button variant='contained' disabled={!listData} onClick={() => parseListData()} endIcon={<CloudUpload />}>\r\n              Importera\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n","import { useParams } from 'react-router';\r\nimport { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { db } from 'src/database';\r\nimport { TickList } from 'src/database/models/tickList';\r\nimport { Box, Paper } from '@mui/material';\r\nimport { Taxon } from 'src/database/models/taxon';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { TaxonDisplay } from 'src/shared/models/taxonDisplay';\r\nimport { SortTickListEnum } from 'src/shared/state/state';\r\nimport { GameContext } from 'src/shared/state/context';\r\nimport { SortableTickList } from 'src/modules/lists/components/sortableTickList';\r\nimport { TickListTabs } from 'src/modules/lists/components/tickListTabs';\r\nimport { TickListName } from 'src/modules/lists/components/tickListName';\r\nimport { CompareTickLists } from 'src/modules/lists/components/compareTickLists';\r\nimport { WantedSpeciesList } from 'src/modules/lists/components/wantedSpecies';\r\nimport { TickListTabPanel } from '../components/tickListTabPanel';\r\n\r\nexport interface IParams {\r\n  id: string;\r\n}\r\n\r\nexport const ViewTickListPage = () => {\r\n  const { id } = useParams<IParams>();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n\r\n  const handleTabChange = useCallback((newValue: number) => {\r\n    setActiveTab(newValue);\r\n  }, []);\r\n\r\n  const { state } = useContext(GameContext);\r\n  const sortByDate = state.sortListBy === SortTickListEnum.Date;\r\n\r\n  const [wanted, setWanted] = useState<boolean>(false);\r\n  const [taxaList, setTaxaList] = useState<Taxon[]>([]);\r\n  const [wantedTaxaList, setWantedTaxaList] = useState<Taxon[]>([]);\r\n  const [tickList, setTickList] = useState<TickList | undefined>();\r\n  const [displayTaxaList, setDisplayTaxaList] = useState<TaxonDisplay[] | undefined>([]);\r\n\r\n  const allTaxa = useLiveQuery(() => db.taxon.toArray());\r\n  const tickListTableData = useLiveQuery(() => db.tickList.get(+id));\r\n\r\n  useEffect(() => {\r\n    if (allTaxa !== undefined && tickListTableData !== undefined) {\r\n      setTaxaList(allTaxa.filter((x) => x.isCountable));\r\n      setTickList(tickListTableData);\r\n      if (activeTab === 1) {\r\n        const wantedTicks = allTaxa\r\n          .filter((x) => x.isCountable && !tickListTableData.ticks.some((existingTaxa) => x.taxonId === existingTaxa.taxonId))\r\n          .sort((a, b) => {\r\n            return b.rank - a.rank;\r\n          });\r\n        // .filter((item, index) => {\r\n        //   return index < 100;\r\n        // })\r\n        // .sort((a, b) => {\r\n        //   return a.sortOrder - b.sortOrder;\r\n        // });\r\n        setWantedTaxaList(wantedTicks);\r\n      }\r\n      if (activeTab === 0) {\r\n        const mappedTaxaList = tickListTableData?.ticks.map((item) => {\r\n          const findTaxa = allTaxa?.find((taxa) => taxa.taxonId === item.taxonId);\r\n          return { ...item, ...findTaxa } as unknown as TaxonDisplay;\r\n        });\r\n        mappedTaxaList.sort((a, b) => {\r\n          if (sortByDate) {\r\n            return state.sortListAsc ? +new Date(a.date) - +new Date(b.date) : +new Date(b.date) - +new Date(a.date);\r\n          }\r\n          return state.sortListAsc ? a.sortOrder - b.sortOrder : b.sortOrder - a.sortOrder;\r\n        });\r\n        setDisplayTaxaList(mappedTaxaList);\r\n      }\r\n    }\r\n  }, [allTaxa, tickListTableData, wanted, sortByDate, state.sortListAsc, activeTab]);\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        elevation={0}\r\n        square\r\n        sx={{\r\n          mx: -2,\r\n        }}\r\n      >\r\n        {tickList && <TickListName tickList={tickList} />}\r\n        <Box\r\n          sx={{\r\n            borderBottom: 1,\r\n            borderColor: 'divider',\r\n          }}\r\n        >\r\n          <TickListTabs\r\n            tabItems={[\r\n              {\r\n                id: 0,\r\n                label: 'Arter',\r\n              },\r\n              {\r\n                id: 1,\r\n                label: 'Förväntade',\r\n              },\r\n              {\r\n                id: 2,\r\n                label: 'Jämför',\r\n              },\r\n            ]}\r\n            callback={handleTabChange}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n      <TickListTabPanel value={activeTab} index={0}>\r\n        {activeTab === 0 && displayTaxaList && <SortableTickList taxaList={displayTaxaList} />}\r\n      </TickListTabPanel>\r\n      <TickListTabPanel value={activeTab} index={1}>\r\n        {activeTab === 1 && tickList && <WantedSpeciesList wantedSpeciesList={wantedTaxaList} tickListId={tickList.id} />}\r\n      </TickListTabPanel>\r\n      <TickListTabPanel value={activeTab} index={2}>\r\n        {activeTab === 2 && tickList && <CompareTickLists currentTickList={tickList} />}\r\n      </TickListTabPanel>\r\n    </>\r\n  );\r\n};\r\n","import { Paper } from '@mui/material';\r\nimport { useLiveQuery } from 'dexie-react-hooks';\r\nimport { useContext } from 'react';\r\nimport { db } from 'src/database';\r\nimport { GameContext } from 'src/shared/state/context';\r\nimport { TagActiveView } from '../components/tagActiveView';\r\nimport { TagEdit } from '../components/tagEdit';\r\n\r\nexport const TagsPage = () => {\r\n  const { state, dispatch } = useContext(GameContext);\r\n\r\n  const allLists = useLiveQuery(() => db.tickList.toArray());\r\n\r\n  return (\r\n    <>\r\n      {state.activeTagId && <TagActiveView />}\r\n      {!state.activeTagId && <TagEdit />}\r\n    </>\r\n  );\r\n};\r\n","import { HashRouter as Router } from 'react-router-dom';\r\nimport { PageRoutes } from 'src/shared/routes/pageRoutes';\r\nimport { GameContext } from 'src/shared/state/context';\r\nimport { gameReducer } from 'src/shared/state/reducer';\r\nimport { initialGameState } from 'src/shared/state/state';\r\nimport { useReducer } from 'react';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// ...\r\n// import { unregister } from 'src/serviceWorkerRegistration';\r\n// unregister();\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(gameReducer, initialGameState);\r\n\r\n  return (\r\n    <GameContext.Provider value={{ state, dispatch }}>\r\n      <Router basename='/'>\r\n        <PageRoutes />\r\n        {/* <AppTemplate mainNavigation={<PageHeader />} mainContent={<PageRoutes />} /> */}\r\n      </Router>\r\n      <ToastContainer\r\n        theme='colored'\r\n        position='top-right'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\n// serviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}